{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Description/Description.module.css","components/Profile/Avatar/Avatar.module.css","components/Profile/Profile.module.css","components/Profile/Avatar/Avatar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/WriteNewPost/WriteNewPost.jsx","components/Profile/WriteNewPost/WriteNewPostContainer.jsx","components/Profile/Description/ProfileData/ProfileData.jsx","components/Profile/Description/ProfileDataForm/ProfileDataForm.jsx","components/Profile/Description/Description.jsx","components/Profile/Description/DescriptionContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirectComponent","Component","RedirectComponent","this","props","isAuth","authUserData","to","React","connect","state","Auth","module","exports","Avatar","className","styles","avatar","src","photos","small","userPhoto","avatar__photo","alt","isOwner","type","onChange","onAvatarSelected","ownProps","ProfilePage","profile","saveProfilePhoto","e","target","files","length","memo","post","text","likesCount","MyPosts","Posts","MyPostsContainer","PostsData","map","x","key","id","message","maxLengthCreator10","maxLengthCreator","WriteNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","htmlFor","Field","component","Textarea","name","validate","required","WriteNewPost","style","formData","console","log","addPost","newPostText","WriteNewPostContainer","ProfileData","onClick","turnOnEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","c","ProfileDataReduxForm","error","createSimpleField","Input","border","updateProfile","getUserProfile","values","then","turnOffEditMode","userId","Description","useState","editMode","setEditMode","fontFamily","color","onDoubleClick","status","autoFocus","onBlur","setStatus","value","onChangeStatus","initialValues","getStatus","updateStatus","setStateEditMode","useEffect","editModeState","Profile","DescriptionContainer","Preloader","ProfileContainer","myId","getUserProfileById","match","params","prevProps","prevState","snapshot","compose","undefined","withRouter"],"mappings":"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","file":"static/js/3.c805c583.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUserData} from \"../redux/auth-reducer\";\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) {\r\n                authUserData();\r\n                if(this.props.isAuth === false)\r\n                    return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect((state) =>\r\n        {\r\n            return {\r\n                isAuth: state.Auth.isAuth\r\n            }\r\n        },\r\n        {\r\n            authUserData\r\n        }\r\n    )(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Description_contacts__1vBkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2WZvf\",\"avatar__photo\":\"Avatar_avatar__photo__TV6zX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3VnSr\"};","import React from 'react';\nimport styles from './Avatar.module.css'\nimport userPhoto from '../../assets/freepik-avatar.jpg';\nimport {connect} from \"react-redux\";\nimport {saveProfilePhoto} from \"../../../redux/profile-reducer\";\n\n\nfunction Avatar(props){\n\treturn(\n\t\t\t<div className={styles.avatar}>\n\t\t\t\t<img src={props.photos.small || userPhoto} className={styles.avatar__photo} alt=\"ava \"/>\n\t\t\t\t{props.isOwner && <input type={\"file\"} onChange={props.onAvatarSelected}/>}\n\t\t\t</div>\n\t);\n}\n\nconst AvatarContainer = (props)=>{\n\tconst onAvatarSelected = (e) => {\n\t\tif( e.target.files.length)\n\t\t{\n\t\t\tprops.saveProfilePhoto(e.target.files[0]);\n\t\t}\n\t}\n\treturn <Avatar {...props} onAvatarSelected={onAvatarSelected} />;\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n\t...ownProps,\n\tphotos: state.ProfilePage.profile.photos\n});\n\nexport default connect(mapStateToProps, {saveProfilePhoto})(AvatarContainer);\n","import React from 'react';\nimport styles from './Post.css';\n\nconst Post = (props) => {\n\treturn (\n\t\t<div className={styles.post}>\n\t\t\t<p>{props.text}</p>\n\t\t\t<span>{props.likesCount}</span>\n\t\t</div>\n\t);\n}\n\nexport default React.memo(Post);\n","import React from 'react';\n\nconst MyPosts = props => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>MyPosts</h3>\n\t\t\t{props.Posts}\n\t\t</div>\n\t);\n};\n\nexport default MyPosts;\n","import React, {PureComponent} from 'react';\nimport Post from './Post/Post';\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (props) => {\n    return {\n        Posts: props.ProfilePage.PostsData.map(x => (\n            <Post key={x.id} text={x.message} likesCount={x.likesCount}/>\n            ))\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, null)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\n\nconst maxLengthCreator10 = maxLengthCreator(10);\n\nconst WriteNewPostForm = (props) => {\n    return (\n        <form  onSubmit={props.handleSubmit}>\n            <div>\n                <div>\n                    <label htmlFor={\"newPostText\"}>Write your new post!</label>\n                </div>\n                <div>\n                    <Field\n                        component={Textarea}\n                        name={\"newPostText\"}\n                        validate={[required, maxLengthCreator10 ]}\n                    />\n                </div>\n            </div>\n            <button type=\"submit\"  >Send new post</button>\n        </form>\n    );\n}\n\nconst WriteNewPostReduxForm = reduxForm({\n    form: 'writeNewPost'\n})(WriteNewPostForm);\n\nconst WriteNewPost = (props) => {\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n        props.addPost(formData.newPostText);\n    }\n\n    return (\n        <div style={{\"margin\": \"20px\"}}>\n        <WriteNewPostReduxForm onSubmit ={onSubmit}/>\n        </div>\n    );\n\n}\n\nexport default WriteNewPost;\n","import {addPost, updateNewPost} from \"../../../redux/profile-reducer\";\nimport WriteNewPost from \"./WriteNewPost\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state)=>{\n    return {\n    }\n}\n\nconst WriteNewPostContainer = connect(mapStateToProps, {addPost})(WriteNewPost);\n\nexport default WriteNewPostContainer;\n","import style from \"../Description.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            <button onClick={props.turnOnEditMode}>Edit</button>\r\n            <div className=\"fullName\">{props.profile.fullName}</div>\r\n            <div className=\"aboutMe\">{props.profile.aboutMe}</div>\r\n\r\n            <div>\r\n                {props.profile.lookingForAJob && props.profile.lookingForAJobDescription}\r\n            </div>\r\n            <div>\r\n                {(props.profile.contacts.length !== 0) && \"Социальные сети\"}\r\n            </div>\r\n            <dl className={style.contacts}>\r\n                {\r\n                    (props.profile.contacts.length !== 0) &&\r\n                    Object.keys(props.profile.contacts).map(c =>\r\n                        (\r\n                            <>\r\n                                <dt className={\"contacts_item\"} key={c}>\r\n                                    {c}\r\n                                </dt>\r\n                                <dd key={c + 'Prop'}>\r\n                                    {props.profile.contacts[c]}\r\n                                </dd>\r\n                            </>\r\n                        )\r\n                    )\r\n                }\r\n            </dl>\r\n        </div>);\r\n}\r\n\r\nexport default ProfileData;","import style from \"../Description.module.css\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, updateProfile} from \"../../../../redux/profile-reducer\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createSimpleField, Input, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../../utils/validators/validators\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    const {error} = props;\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createSimpleField('Full name', 'fullName', [required], Input)}\r\n            {createSimpleField('About me', 'aboutMe', [required], Textarea)}\r\n            {createSimpleField('looking for a job', 'lookingForAJob', [], Input, 'checkbox', 'Looking for a job')}\r\n            {createSimpleField('looking for a job', 'lookingForAJobDescription', [required], Textarea, 'Looking a job description')}\r\n\r\n\r\n            <         div>\r\n                {(props.profile.contacts.length !== 0) && \"Социальные сети\"}\r\n            </div>\r\n            <dl className={style.contacts}>\r\n                {\r\n                    (props.profile.contacts.length !== 0) &&\r\n                    Object.keys(props.profile.contacts).map(c =>\r\n                        (\r\n                            <>\r\n                                <dt className={\"contacts_item\"} key={c}>\r\n                                    {c}\r\n                                </dt>\r\n                                <dd key={c + 'Prop'}>\r\n                                    {createSimpleField(c, 'contacts.' + c, [], Input)}\r\n                                </dd>\r\n                            </>\r\n                        )\r\n                    )\r\n                }\r\n            </dl>\r\n            {error && <div style={{border: \"1px solid red\"}}>\r\n                {error}\r\n            </div>}\r\n            <button type=\"submit\">Save new Data</button>\r\n        </form>\r\n    </div>;\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'profile'})(ProfileDataForm)\r\n\r\nconst ProfileDataFormContainer = (props) => {\r\n    const onSubmit = (values) => {\r\n        //TODO: architecture error, rewrite\r\n        props.updateProfile(values).then(()=>{\r\n            props.turnOffEditMode();\r\n            props.getUserProfile(props.profile.userId);\r\n        })\r\n    }\r\n    return <ProfileDataReduxForm {...props} onSubmit={onSubmit}/>;\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateProfile, getUserProfile})(ProfileDataFormContainer);","import React, {useState} from 'react';\nimport style from './Description.module.css';\nimport ProfileData from './ProfileData/ProfileData';\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\n\nconst Description = (props) => {\n\n    const [editMode, setEditMode] = useState(false);\n\n    return (\n        <div>\n            <div className=\"status\" style={{fontFamily: 'Roboto', color: 'tomato'}}>\n                {\n                    !props.editMode &&\n                    <div>\n                    <span\n                        onDoubleClick={() => {\n                            props.setEditMode(true)\n                        }}\n                    >\n                        {props.status || \"-----\"}\n                    </span>\n                    </div>\n                }\n\n                {\n                    props.editMode &&\n                    <input\n                        autoFocus={true}\n                        onBlur={() => props.setStatus(props.status)}\n                        value={props.status}\n                        onChange={(e) => {\n                            props.onChangeStatus(e.target.value)\n                        }}\n                    />\n                }\n            </div>\n            {editMode\n                ? <ProfileDataForm initialValues={props.profile} turnOffEditMode={() => setEditMode(false)}/>\n                : <ProfileData profile={props.profile} turnOnEditMode={() => setEditMode(true)}/>\n            }\n        </div>\n    );\n}\n\n\n\n\n\nexport default Description;\n","import React, {useEffect, useState} from 'react';\r\nimport Description from \"./Description\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, updateStatus} from \"../../../redux/profile-reducer\";\r\n\r\nconst DescriptionContainerWithHooks = (props) => {\r\n\r\n    let [editMode, setStateEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        props.getStatus(props.profile.userId)\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const onChangeStatus =(status) =>{\r\n        setStatus(status)\r\n    }\r\n\r\n    const setAboutMe = () =>{\r\n        props.updateStatus(status);\r\n        setStateEditMode(false);\r\n    }\r\n\r\n    const setEditMode = (editModeState) =>\r\n    {\r\n        setStateEditMode(editModeState)\r\n    }\r\n\r\n        return (\r\n            <Description\r\n                profile={props.profile}\r\n                status={status}\r\n                editMode={editMode}\r\n                onChangeStatus={onChangeStatus}\r\n                setStatus={setAboutMe}\r\n                setEditMode={setEditMode}\r\n            />\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status\r\n    }\r\n};\r\nexport default connect(mapStateToProps, {getStatus, updateStatus})(DescriptionContainerWithHooks);\r\n","import React from 'react';\nimport Avatar from './Avatar/Avatar.jsx';\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\nimport styles from './Profile.module.css';\nimport WriteNewPostContainer from \"./WriteNewPost/WriteNewPostContainer\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport DescriptionContainer from \"./Description/DescriptionContainer\";\n\nconst  Profile = (props) => {\n\tif(!props.profile) {\n\t\treturn <Preloader />\n\t}\n\n\treturn (\n\t\t<div className={styles.profile}>\n\t\t\t<Avatar photos={props.profile.photos} isOwner={props.isOwner}/>\n\t\t\t<DescriptionContainer profile={props.profile} status={props.status}/>\n\t\t\t<WriteNewPostContainer />\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    getUserProfileById(userId)\r\n    {\r\n        this.props.getUserProfile(userId ? userId : this.props.myId);\r\n        this.props.getStatus(userId ? userId : this.props.myId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserProfileById(this.props.match.params.userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.match.params.userId !== this.props.match.params.userId)\r\n            this.getUserProfileById(this.props.match.params.userId);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.myId  && !this.props.match.params.userId)\r\n            return <Redirect to={'/login'}/>;\r\n\r\n        return (\r\n            <Profile\r\n                isOwner={!!this.props.myId}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    myId: state.Auth.isAuth ? state.Auth.userId : undefined\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}