{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Avatar/Avatar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/WriteNewPost/WriteNewPost.jsx","components/Profile/WriteNewPost/WriteNewPostContainer.jsx","components/Profile/Description/Description.jsx","components/Profile/Description/DescriptionContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Avatar","props","className","styles","avatar","src","photos","small","alt","React","memo","post","text","likesCount","MyPosts","Posts","MyPostsContainer","connect","ProfilePage","PostsData","map","x","key","id","message","maxLengthCreator10","maxLengthCreator","WriteNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","htmlFor","Field","component","Textarea","name","validate","required","type","WriteNewPost","style","formData","console","log","addPost","newPostText","WriteNewPostContainer","state","Description","fontFamily","color","editMode","onDoubleClick","setEditMode","status","autoFocus","onBlur","setStatus","value","onChange","e","onChangeStatus","target","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","length","Object","values","filter","c","getStatus","updateStatus","useState","setStateEditMode","useEffect","userId","editModeState","Profile","DescriptionContainer","Preloader","ProfileContainer","this","match","params","getUserProfile","myId","Component","compose","Auth","isAuth","undefined","withRouter"],"mappings":"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","file":"static/js/3.339f0499.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3VnSr\"};","import React from 'react';\nimport styles from './Avatar.css'\n\nfunction Avatar(props){\n\treturn(\n\t\t\t<div className={styles.avatar}>\n\t\t\t\t<img src={props.photos.small} alt=\"ava \"/>\n\t\t\t</div>\n\t);\n}\n\nexport default Avatar;\n","import React from 'react';\nimport styles from './Post.css';\n\nconst Post = (props) => {\n\treturn (\n\t\t<div className={styles.post}>\n\t\t\t<p>{props.text}</p>\n\t\t\t<span>{props.likesCount}</span>\n\t\t</div>\n\t);\n}\n\nexport default React.memo(Post);\n","import React from 'react';\n\nconst MyPosts = props => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>MyPosts</h3>\n\t\t\t{props.Posts}\n\t\t</div>\n\t);\n};\n\nexport default MyPosts;\n","import React, {PureComponent} from 'react';\nimport Post from './Post/Post';\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (props) => {\n    return {\n        Posts: props.ProfilePage.PostsData.map(x => (\n            <Post key={x.id} text={x.message} likesCount={x.likesCount}/>\n            ))\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, null)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\n\nconst maxLengthCreator10 = maxLengthCreator(10);\n\nconst WriteNewPostForm = (props) => {\n    return (\n        <form  onSubmit={props.handleSubmit}>\n            <div>\n                <div>\n                    <label htmlFor={\"newPostText\"}>Write your new post!</label>\n                </div>\n                <div>\n                    <Field\n                        component={Textarea}\n                        name={\"newPostText\"}\n                        validate={[required, maxLengthCreator10 ]}\n                    />\n                </div>\n            </div>\n            <button type=\"submit\"  >Send new post</button>\n        </form>\n    );\n}\n\nconst WriteNewPostReduxForm = reduxForm({\n    form: 'writeNewPost'\n})(WriteNewPostForm);\n\nconst WriteNewPost = (props) => {\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n        props.addPost(formData.newPostText);\n    }\n\n    return (\n        <div style={{\"margin\": \"20px\"}}>\n        <WriteNewPostReduxForm onSubmit ={onSubmit}/>\n        </div>\n    );\n\n}\n\nexport default WriteNewPost;\n","import {addPost, updateNewPost} from \"../../../redux/profile-reducer\";\nimport WriteNewPost from \"./WriteNewPost\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state)=>{\n    return {\n    }\n}\n\nconst WriteNewPostContainer = connect(mapStateToProps, {addPost})(WriteNewPost);\n\nexport default WriteNewPostContainer;\n","import React from 'react';\n\nconst Description = (props) => {\n    return (<div>\n        <div className=\"status\" style={{fontFamily: 'Roboto', color: 'tomato'}}>\n            {\n                !props.editMode &&\n                <div>\n                    <span\n                        onDoubleClick={() => {\n                            props.setEditMode(true)\n                        }}\n                    >\n                        {props.status || \"-----\"}\n                    </span>\n                </div>\n            }\n\n            {\n                props.editMode &&\n                <input\n                    autoFocus={true}\n                    onBlur={() => props.setStatus(props.status)}\n                    value={props.status}\n                    onChange={(e) => {\n                        props.onChangeStatus(e.target.value)\n                    }}\n                />\n            }\n        </div>\n        <div className=\"fullName\">{props.profile.fullName}</div>\n        <div className=\"aboutMe\">{props.profile.aboutMe}</div>\n\n        <div>\n            {props.profile.lookingForAJob && props.profile.lookingForAJobDescription}\n        </div>\n        <div>\n            {(props.profile.contacts.length !== 0) && \"Социальные сети\"}\n        </div>\n        {\n            (props.profile.contacts.length !== 0) &&\n            Object.values(props.profile.contacts).filter(c => c).map(c =>\n                (\n                    <div className=\"Contacts__item\" key={c}>{c}</div>\n                )\n            )\n        }\n    </div>);\n}\n\nexport default Description;\n","import React, {useEffect, useState} from 'react';\r\nimport Description from \"./Description\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, updateStatus} from \"../../../redux/profile-reducer\";\r\n\r\nconst DescriptionContainerWithHooks = (props) => {\r\n\r\n    let [editMode, setStateEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        props.getStatus(props.profile.userId)\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const onChangeStatus =(status) =>{\r\n        setStatus(status)\r\n    }\r\n\r\n    const setAboutMe = () =>{\r\n        props.updateStatus(status);\r\n        setStateEditMode(false);\r\n    }\r\n\r\n    const setEditMode = (editModeState) =>\r\n    {\r\n        setStateEditMode(editModeState)\r\n    }\r\n\r\n        return (\r\n            <Description\r\n                profile={props.profile}\r\n                status={status}\r\n                editMode={editMode}\r\n                onChangeStatus={onChangeStatus}\r\n                setStatus={setAboutMe}\r\n                setEditMode={setEditMode}\r\n            />\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status\r\n    }\r\n};\r\nexport default connect(mapStateToProps, {getStatus, updateStatus})(DescriptionContainerWithHooks);\r\n","import React from 'react';\nimport Avatar from './Avatar/Avatar.jsx';\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\nimport styles from './Profile.module.css';\nimport WriteNewPostContainer from \"./WriteNewPost/WriteNewPostContainer\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport DescriptionContainer from \"./Description/DescriptionContainer\";\n\nconst  Profile = (props) => {\n\tif(!props.profile) {\n\t\treturn <Preloader />\n\t}\n\n\treturn (\n\t\t<div className={styles.profile}>\n\t\t\t<Avatar photos={props.profile.photos}/>\n\t\t\t<DescriptionContainer profile={props.profile} status={props.status}/>\n\t\t\t<WriteNewPostContainer />\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        this.props.getUserProfile(userId ? userId : this.props.myId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    myId: state.Auth.isAuth ? state.Auth.userId : undefined\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}