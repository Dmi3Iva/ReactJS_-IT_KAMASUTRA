{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","components/assets/freepik-avatar.jpg","components/assets/loading.svg","components/Header/logo.svg","components/Login/login.module.css","components/Sidebar/Sidebar.module.css","api/api.js","redux/auth-reducer.js","serviceWorker.js","components/Sidebar/Sidebar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","redux/auth-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/Common/FormsControls/FormsControls.js","components/Common/Preloader/Preloader.jsx","App.module.css","components/Common/Paginator/Paginator.module.css","components/Header/Header.module.css","utils/validators/validators.js","components/Common/FormsControls/FormsControls.module.css","redux/profile-reducer.js"],"names":["initialState","MessagesData","id","avatar","name","text","ContactsData","sendMessage","newMessage","type","dialogsReducer","state","action","lastId","undefined","module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userId","post","unfollowUser","delete","authAPI","authMe","login","email","password","rememberMe","logout","profileAPI","getUserProfile","getStatus","updateStatus","status","put","isAuth","authUserData","dispatch","a","resultCode","setAuthUserData","message","messages","length","stopSubmit","_error","pass","authReducer","Boolean","window","location","hostname","match","Sidebar","className","styles","sidebar","sidebar__menu","sidebar__item","activeClassName","active","to","updateObjectInArray","items","itemId","objPropName","newObjProps","map","x","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","Paginator","onPageChanged","pages","pagesCount","movePages","itemsPaginatorCount","pagination","some","onClick","p","key","pagination__item","pagination__current","PaginatorContainer","props","leftEdge","Math","floor","rightEdge","ceil","useState","Pages","Array","element","index","paginator","setPaginator","useEffect","prevState","nbr","User","photos","unfollow","follow","userPhoto","src","small","defaultUserPhoto","alt","disabled","Users","createSelector","UsersPage","u","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","Auth","UsersContainer","requestUsers","this","Preloader","React","Component","connect","bind","totalCount","Header","header","header__logo","logo","login__block","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","method","onSubmit","createSimpleField","required","Input","style","formSummaryError","formData","console","log","initialized","reducers","combineReducers","ProfilePage","profileReducer","MessagesPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","wrapper","content","path","render","exact","Login","AppContainer","withRouter","dispatchResult","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeHolder","validators","component","placeholder","validate","loadingSVG","value","maxLengthCreator","maxLength","PostsData","likesCount","profile","newPostText","addPost","setUserStatus","postText","postId"],"mappings":"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","file":"static/js/main.4c96c003.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    MessagesData: [\r\n        {id: 1, avatar: \"ava\", name: \"Andrew\", text: \"How is your day?\"},\r\n        {id: 2, avatar: \"ava\", name: \"Me\", text: \"It's ok, thank you for asking\"},\r\n        {id: 3, avatar: \"ava\", name: \"Andrew\", text: \"You're welcome!\"}\r\n    ],\r\n    ContactsData: [\r\n        {id: 1, name: \"Andrew\"},\r\n        {id: 2, name: \"Oleg\"},\r\n        {id: 3, name: \"Sasha\"},\r\n        {id: 4, name: \"Sveta\"},\r\n        {id: 5, name: \"Olga\"},\r\n        {id: 6, name: \"Kristy\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ADD_MESSAGE:\r\n            let lastId = 1;\r\n            while( state.MessagesData[lastId] !== undefined)\r\n                ++lastId;\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {\r\n                    id: lastId,\r\n                    avatar: \"ava\",\r\n                    name: \"The GOD\",\r\n                    text: action.newMessage\r\n                }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessage) => ({ type: ADD_MESSAGE, newMessage });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3GUvv\"};","module.exports = __webpack_public_path__ + \"static/media/freepik-avatar.5b019637.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.4ba43602.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"login_formSummaryError__r67RS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__gRxXe\",\"sidebar__menu\":\"Sidebar_sidebar__menu__tltDb\",\"sidebar__item\":\"Sidebar_sidebar__item__lG_a9\",\"active\":\"Sidebar_active__3FjMO\"};","import * as axios from \"axios\";\r\nimport deleteIn from \"redux-form/lib/structure/plain/deleteIn\";\r\n\r\nconst BASE_URL = 'https://social-network.samuraijs.com/api/1.0/';\r\nconst API_KEY = '53d3dc64-a25c-445e-81a3-2b2dcf8f14a9';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': API_KEY\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    followUser: (userId) => {\r\n        return instance.post('follow/' + userId, null)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollowUser: (userId) => {\r\n        return instance.delete('follow/' + userId)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () => {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    login: (email, password, rememberMe  = false) => {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout: () => {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`).then(\r\n            response => {\r\n                return response.data\r\n            }\r\n        );\r\n    },\r\n    getStatus: (userId) => {\r\n        return instance.get('profile/status/' + userId)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance.put('profile/status/', {status})\r\n            .then(response => response.data);\r\n    }\r\n\r\n\r\n}","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: action.data.isAuth\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport const authUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n}\r\n\r\nexport const login = (email, pass, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, pass, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth = false) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, login, email, isAuth}\r\n});\r\n\r\nexport default authReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './Sidebar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nfunction Sidebar() {\n\treturn (\n\t\t<aside className={styles.sidebar}>\n\t\t\t<ul className={styles.sidebar__menu}>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/profile\">Profile</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/dialogs\">Messages</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/news\">News</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/music\">Music</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/users\">Find user</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/settings\">Settings</NavLink></li>\n\t\t\t</ul>\n\t\t</aside>\n\t);\n}\n\nexport default Sidebar;\n\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(x => {\r\n        if (x[objPropName] === itemId) {\r\n            return {...x, ...newObjProps}\r\n        }\r\n        return x;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\n//TODO: add prefixs files for conts\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    let data = await apiMethod(id);\r\n\r\n    if (data.resultCode === 0)\r\n        dispatch(actionCreator(id));\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst PaginatorContainer = (props) => {\r\n    let currentPage = props.currentPage;\r\n    let itemsPaginatorCount = props.itemsPaginatorCount;\r\n    let leftEdge = Math.floor(currentPage / itemsPaginatorCount) * itemsPaginatorCount + 1;\r\n    let rightEdge = Math.ceil(currentPage / itemsPaginatorCount) * itemsPaginatorCount;\r\n\r\n    let [paginator, setPaginator] = useState({\r\n        currentPage: props.currentPage,\r\n        pagesCount: Math.ceil(props.totalUsersCount / props.pageSize),\r\n        itemsPaginatorCount: itemsPaginatorCount,\r\n        leftEdge: leftEdge,\r\n        rightEdge: rightEdge,\r\n        Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n    });\r\n\r\n    useEffect(()=>{\r\n        setPaginator((prevState)=>({\r\n            ...prevState,\r\n            pagesCount: Math.ceil(props.totalUsersCount / props.pageSize)\r\n        }))\r\n    }, [props.totalUsersCount, props.pageSize])\r\n\r\n    const movePages = (nbr) => {\r\n        let leftEdge = (paginator.leftEdge + nbr < 1)\r\n            ? 1 : paginator.leftEdge + nbr;\r\n        let rightEdge = (leftEdge + paginator.itemsPaginatorCount > paginator.pagesCount)\r\n            ? paginator.pagesCount : leftEdge + paginator.itemsPaginatorCount;\r\n\r\n        if(leftEdge > rightEdge)\r\n            rightEdge = leftEdge;\r\n        setPaginator((prevState) => ({\r\n                ...prevState,\r\n                leftEdge: leftEdge,\r\n                rightEdge: rightEdge,\r\n                Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n            })\r\n        )\r\n    }\r\n\r\n    return <Paginator {...props} pages={paginator.Pages} movePages={movePages} pagesCount={paginator.pagesCount}/>;\r\n}\r\n\r\nconst Paginator = ({currentPage, onPageChanged, pages, pagesCount, movePages, itemsPaginatorCount}) => {\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            {((!pages.some(x => x < 11))) &&\r\n            <button onClick={() => movePages(-itemsPaginatorCount)}>Prev</button>}\r\n            {pages.map(p => <div key={p} onClick={() => {\r\n                onPageChanged(p)\r\n            }} className={styles.pagination__item + ' ' + (currentPage === p && styles.pagination__current)}>{p}</div>)}\r\n            {!pages.some(x=> x > pagesCount - 10) && <button onClick={() => movePages(itemsPaginatorCount)}>Next</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginatorContainer;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport defaultUserPhoto from \"../assets/freepik-avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({\r\n                  id: userId,\r\n                  photos,\r\n                  name,\r\n                  followed,\r\n                  followingInProgress,\r\n                  unfollow,\r\n                  follow,\r\n                  status,\r\n              }) => {\r\n    return (\r\n        <div key={userId}>\r\n      <span>\r\n        <div>\r\n          <NavLink to={`/profile/${userId}`}>\r\n            <img\r\n                className={styles.userPhoto}\r\n                src={photos.small != null ? photos.small : defaultUserPhoto}\r\n                alt={`avatar of ${name}`}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {followed ? (\r\n              <button\r\n                  disabled={followingInProgress.some((id) => userId === id)}\r\n                  onClick={() => {\r\n                      unfollow(userId);\r\n                  }}\r\n              >\r\n                  Unfollow\r\n              </button>\r\n          ) : (\r\n              <button\r\n                  disabled={followingInProgress.some((id) => userId === id)}\r\n                  onClick={() => {\r\n                      follow(userId);\r\n                  }}\r\n              >\r\n                  Follow\r\n              </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n            <span>\r\n        <span>\r\n          <div>{name}</div>\r\n          <div>{status}</div>\r\n        </span>\r\n      </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from \"./User\";\r\n\r\nconst Users = ({\r\n                   currentPage, pageSize, totalUsersCount,\r\n                   onPageChanged, followingInProgress, follow, unfollow,\r\n                   users\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                itemsPaginatorCount={10}\r\n            />\r\n            {\r\n                users.map(x =>\r\n                    <User\r\n                        {...x}\r\n                        followingInProgress={followingInProgress}\r\n                        follow={follow}\r\n                        unfollow={unfollow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.UsersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(\r\n    getUsersSelector,\r\n    (users) => {\r\n        return users.filter((u) => true);\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.UsersPage.followingInProgress;\r\n}","export const getIsAuth = (state) => {\r\n    return state.Auth.isAuth;\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    toggleFollowingInProgress,\r\n    toggleIsFetching,\r\n    unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\nimport {getIsAuth} from \"../../redux/auth-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n        return (<>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                /></>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        toggleIsFetching, toggleFollowingInProgress,\r\n        requestUsers\r\n    }\r\n)(UsersContainer);","import React from 'react';\nimport logo from './logo.svg';\nimport styles from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header(props){\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<img className={styles.header__logo} src={logo} alt=\"Logo\"/>\n\t\t\t<div className={styles.login__block}>\n\t\t\t\t{props.isAuth ?\n\t\t\t\t\t<div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n\t\t\t\t\t:<NavLink to={'/login'}>Login</NavLink>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (<Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    login: state.Auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createSimpleField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./login.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <div>\r\n            <form action=\"/\" method=\"GET\" onSubmit={handleSubmit}>\r\n                {createSimpleField('Login', 'login', required, Input)}\r\n                {createSimpleField('password', 'password', required, Input, 'password')}\r\n                {createSimpleField('', 'rememberMe',  null, Input, 'checkbox', 'rememberMe')}\r\n\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button>login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        const {login, password, rememberMe} = formData;\r\n        props.login(login, password, rememberMe);\r\n    }\r\n\r\n    if (props.isAuth)\r\n        return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login);\r\n","import {authUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized : false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) =>{\r\n    let dispatchResult = dispatch(authUserData());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>{\r\n            dispatch(initializedSuccess());\r\n    })\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    MessagesPage: dialogsReducer,\r\n    UsersPage: usersReducer,\r\n    Auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>;\r\n    }\r\n}\r\n\r\nexport default WithSuspense;","import React from 'react';\nimport Sidebar from './components/Sidebar/Sidebar.jsx';\nimport styles from './App.module.css';\nimport {HashRouter, Route, withRouter} from 'react-router-dom';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport WithSuspense from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n\n        return (\n            <div>\n                <div className={`${styles.App} ${styles.wrapper}`}>\n                    <HeaderContainer/>\n                    <Sidebar/>\n                    <div className={styles.content}>\n\n                        <Route path='/profile/:userId?'\n                               render={WithSuspense(ProfileContainer)}\n                        />\n\n                        <Route exact path='/dialogs'\n                               render={WithSuspense(DialogsContainer)}\n                        />\n\n                        <Route exact path='/users'\n                               render={WithSuspense(UsersContainer)}\n                        />\n\n                        <Route exact path='/login'\n                               render={WithSuspense(Login)}\n                        />\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)\n(App);\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    );\n}\n\nexport default SamuraiJSApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport SamuraiJSApp from \"./App\";\n\n// setInterval(()=>{\n//     store.dispatch({type: 'FAKE'});\n// }, 1000)\n\nReactDOM.render(\n    <SamuraiJSApp/>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError && styles.error)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createSimpleField = (placeHolder, name, validators, component, type = 'text', text) => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeHolder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            type={type}\r\n        />\r\n        {text}\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport loadingSVG from \"../../assets/loading.svg\";\r\n\r\nconst Preloader = (props)=>{\r\n    return (<img src={loadingSVG} alt=\"Please, wait for download...\"/>);\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3Fubn\",\"App\":\"App_App__2Pnnn\",\"content\":\"App_content__38VNa\",\"content__wallpaper\":\"App_content__wallpaper__1iWTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__3WCVh\",\"pagination__item\":\"Paginator_pagination__item__qZRBs\",\"pagination__current\":\"Paginator_pagination__current__2XU1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-lMr\",\"header__logo\":\"Header_header__logo__X1oim\",\"login__block\":\"Header_login__block__1M05r\"};","export const required = (value)=>{\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max length us ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength30 = (value)=>{\r\n    if(value && value.length > 30) return \"max length is 30 symbols\";\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__yXrOt\",\"error\":\"FormsControls_error__be64g\",\"formSummaryError\":\"FormsControls_formSummaryError__1-FTL\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst REMOVE_POST = 'REMOVE_POST';\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: \"There's my first post!\", likesCount: 10},\r\n        {id: 2, message: \"Welcome to my page!\", likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    newPostText: '',\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let lastId = 1;\r\n            while (state.PostsData[lastId - 1] !== undefined)\r\n                ++lastId;\r\n\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData,\r\n                    {\r\n                        id: lastId,\r\n                        message: action.newPostText,\r\n                        likesCount: 0\r\n                    }\r\n                ],\r\n                newPostText: ''\r\n            };\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case REMOVE_POST: {\r\n            return {\r\n                ...state, PostsData: state.PostsData.filter(x => x.id !== action.postId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const removePost = (postId) => ({type: REMOVE_POST, postId});\r\nexport const updateNewPost = (postText) => ({type: UPDATE_NEW_POST_TEXT, postText: postText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}