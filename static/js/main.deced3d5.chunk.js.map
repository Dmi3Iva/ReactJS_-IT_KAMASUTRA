{"version":3,"sources":["utils/validators/validators.js","components/Common/Paginator/Paginator.module.css","components/Common/Preloader/Preloader.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","components/Common/DefaultUserAvatar/DefaultUserAvatar.jsx","components/assets/freepik-avatar.jpg","api/api.js","redux/auth-reducer.js","serviceWorker.js","utils/object-helpers.js","redux/users-reducer.js","redux/form-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/AppBar/AppBar.jsx","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Search.jsx","redux/users-selector.js","redux/auth-selector.js","components/Users/SearchContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.jsx","App.js","AppInit.jsx","index.js","components/Common/FormsControls/FormsControls.js","components/Common/Preloader/Preloader.jsx"],"names":["required","value","module","exports","ADD_POST","PROFILE_PREFIX","SET_USER_PROFILE","SET_STATUS","REMOVE_POST","initialState","PostsData","id","message","likesCount","profile","newPostText","status","setUserStatus","type","updateProfileSuccess","saveProfilePhoto","file","dispatch","a","profileAPI","updateProfilePhoto","response","data","resultCode","photos","getStatus","userId","updateStatus","getUserProfile","updateProfile","usersAPI","messages","length","stopSubmit","_error","Promise","reject","profileReducer","state","action","lastId","undefined","postText","filter","x","postId","MessagesData","avatar","name","text","ContactsData","sendMessage","newMessage","dialogsReducer","props","instance","axios","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","then","followUser","post","unfollowUser","delete","put","authAPI","authMe","login","email","password","rememberMe","captcha","logout","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","SET_USER_DATA","AUTH_PREFIX","GET_CAPTCHA_URL_SUCCESS","isAuth","captchaUrl","authUserData","setAuthUserData","pass","url","getCaptchaUrlSuccess","authReducer","Boolean","window","location","hostname","match","updateObjectInArray","items","itemId","objPropName","newObjProps","map","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","formReducer","plugin","values","initialized","reducers","combineReducers","ProfilePage","MessagesPage","UsersPage","Auth","app","form","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withStyles","theme","root","position","bottom","width","boxShadow","breakpoints","up","left","marginLeft","maxWidth","menu","backgroundColor","palette","primary","main","item","color","textDecoration","transition","active","classes","className","BottomNavigation","showLabels","BottomNavigationAction","component","NavLink","to","label","icon","Paginator","onPageChanged","pages","pagesCount","movePages","itemsPaginatorCount","styles","pagination","some","onClick","p","key","pagination__item","pagination__current","PaginatorContainer","leftEdge","Math","floor","rightEdge","ceil","useState","Pages","Array","element","index","paginator","setPaginator","useEffect","prevState","nbr","height","unfollow","follow","Link","small","src","defaultUserPhoto","alt","DefaultUserAvatar","disabled","Search","createSelector","u","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","SearchContainer","requestUsers","this","Preloader","React","Component","connect","bind","totalCount","background","marginBottom","display","padding","justifyContent","alignItems","logo","loginName","marginRight","loginLink","Button","variant","HeaderContainer","LoginReduxForm","reduxForm","formSummaryError","border","marginTop","registrationButton","registrationForm","handleSubmit","error","hintRegister","setHintRegister","method","onSubmit","createSimpleField","Input","Checkbox","Card","CardContent","hint","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","reason","console","log","initializeApp","addEventListener","catchAllUnhandledError","removeEventListener","path","render","exact","Login","AppContainer","withRouter","margin","paddingBottom","minHeight","dispatchResult","all","createMuiTheme","overrides","MuiCssBaseline","body","MuiBottomNavigationAction","MuiSvgIcon","fill","MuiButton","secondary","default","AppInit","CssBaseline","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","formControl","input","meta","touched","children","hasError","Textarea","restProps","child","control","placeHolder","validators","placeholder","validate","wrapper"],"mappings":"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","file":"static/js/main.deced3d5.chunk.js","sourcesContent":["export const required = (value)=>{\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max length us ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength30 = (value)=>{\r\n    if(value && value.length > 30) return \"max length is 30 symbols\";\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__3WCVh\",\"pagination__item\":\"Paginator_pagination__item__qZRBs\",\"pagination__current\":\"Paginator_pagination__current__2XU1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__1QbnO\",\"lds-ripple\":\"Preloader_lds-ripple__33-Mw\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form/lib/immutable\";\r\n\r\nconst PROFILE_PREFIX = 'PROFILE_REDUCER/';\r\nconst ADD_POST = PROFILE_PREFIX + 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = PROFILE_PREFIX + 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = PROFILE_PREFIX + 'SET_USER_PROFILE';\r\nconst SET_STATUS = PROFILE_PREFIX + 'SET_STATUS';\r\nconst REMOVE_POST = PROFILE_PREFIX + 'REMOVE_POST';\r\nconst SAVE_PROFILE_PHOTO = PROFILE_PREFIX + 'SAVE_PROFILE_PHOTO';\r\nconst UPDATE_PROFILE_SUCCESS = PROFILE_PREFIX + 'UPDATE_PROFILE_SUCCESS';\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: \"There's my first post!\", likesCount: 10},\r\n        {id: 2, message: \"Welcome to my page!\", likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    newPostText: '',\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let lastId = 1;\r\n            while (state.PostsData[lastId - 1] !== undefined)\r\n                ++lastId;\r\n\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData,\r\n                    {\r\n                        id: lastId,\r\n                        message: action.newPostText,\r\n                        likesCount: 0\r\n                    }\r\n                ],\r\n                newPostText: ''\r\n            };\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case REMOVE_POST: {\r\n            return {\r\n                ...state, PostsData: state.PostsData.filter(x => x.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PROFILE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...action.profile\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const removePost = (postId) => ({type: REMOVE_POST, postId});\r\nexport const updateNewPost = (postText) => ({type: UPDATE_NEW_POST_TEXT, postText: postText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_STATUS, status});\r\nexport const saveProfilePhotoSuccess = (photos) => ({type: SAVE_PROFILE_PHOTO, photos});\r\nexport const updateProfileSuccess = (profile) => ({type: UPDATE_PROFILE_SUCCESS, profile});\r\n\r\nexport const saveProfilePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.updateProfilePhoto(file);\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(saveProfilePhotoSuccess(response.data.data.photos));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const updateProfile = (profile) => async (dispatch) => {\r\n    let response = await usersAPI.updateProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updateProfileSuccess);\r\n    }\r\n    else\r\n    {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"unknown error\";\r\n        dispatch(stopSubmit(\"profile\", {_error: message}))\r\n        return Promise.reject(message);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    MessagesData: [\r\n        {id: 1, avatar: \"ava\", name: \"Andrew\", text: \"How is your day?\"},\r\n        {id: 2, avatar: \"ava\", name: \"Me\", text: \"It's ok, thank you for asking\"},\r\n        {id: 3, avatar: \"ava\", name: \"Andrew\", text: \"You're welcome!\"}\r\n    ],\r\n    ContactsData: [\r\n        {id: 1, name: \"Andrew\"},\r\n        {id: 2, name: \"Oleg\"},\r\n        {id: 3, name: \"Sasha\"},\r\n        {id: 4, name: \"Sveta\"},\r\n        {id: 5, name: \"Olga\"},\r\n        {id: 6, name: \"Kristy\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ADD_MESSAGE:\r\n            let lastId = 1;\r\n            while( state.MessagesData[lastId] !== undefined)\r\n                ++lastId;\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {\r\n                    id: lastId,\r\n                    avatar: \"ava\",\r\n                    name: \"The GOD\",\r\n                    text: action.newMessage\r\n                }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessage) => ({ type: ADD_MESSAGE, newMessage });\r\n\r\nexport default dialogsReducer;","import DefaultUserAvatar from '@material-ui/icons/AccountCircle';\r\nimport React from 'react';\r\n\r\nexport default (props) => <DefaultUserAvatar {...props}/>;\r\n","module.exports = __webpack_public_path__ + \"static/media/freepik-avatar.5b019637.jpg\";","import * as axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://social-network.samuraijs.com/api/1.0/';\r\nconst API_KEY = '53d3dc64-a25c-445e-81a3-2b2dcf8f14a9';\r\nconst API_KEY_TEST = '7b230922-9369-4b22-b114-a334483eb38c';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': API_KEY_TEST\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    followUser: (userId) => {\r\n        return instance.post('follow/' + userId, null)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollowUser: (userId) => {\r\n        return instance.delete('follow/' + userId)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateProfile: (profile) => {\r\n        return instance.put('profile', profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () => {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    login: (email, password, rememberMe = false, captcha = null) => {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha});\r\n    },\r\n    logout: () => {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`).then(\r\n            response => {\r\n                return response.data\r\n            }\r\n        );\r\n    },\r\n    getStatus: (userId) => {\r\n        return instance.get('profile/status/' + userId)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance.put('profile/status/', {status})\r\n            .then(response => response.data);\r\n    },\r\n    updateProfilePhoto: (photoFile) => {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl : () => {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit, reset} from \"redux-form\";\r\n\r\nconst AUTH_PREFIX = 'AUTH_REDUCER/';\r\nconst SET_USER_DATA = AUTH_PREFIX + 'SET_USER_DATA';\r\nexport const GET_CAPTCHA_URL_SUCCESS = AUTH_PREFIX + 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: action.data.isAuth\r\n            }\r\n        }\r\n        case GET_CAPTCHA_URL_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.data.captchaUrl\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport const authUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n    else {\r\n        if(data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n}\r\n\r\nexport const login = (email, pass, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, pass, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUserData());\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = ()=> async(dispatch)=>{\r\n    const response = await securityAPI.getCaptchaUrl();\r\n\r\n    const captcha = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captcha));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth = false) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, login, email, isAuth}\r\n});\r\n\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl)=> ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    data: {captchaUrl}\r\n});\r\n\r\nexport default authReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(x => {\r\n        if (x[objPropName] === itemId) {\r\n            return {...x, ...newObjProps}\r\n        }\r\n        return x;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\n//TODO: add prefixs files for conts\r\nconst PREFIX ='USER-REDUCER/'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    let data = await apiMethod(id);\r\n\r\n    if (data.resultCode === 0)\r\n        dispatch(actionCreator(id));\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {reducer as formReducer} from 'redux-form';\r\nimport {GET_CAPTCHA_URL_SUCCESS} from \"./auth-reducer\";\r\n\r\nexport default formReducer.plugin({\r\n    login: (state, action) => {\r\n        switch (action.type) {\r\n            case GET_CAPTCHA_URL_SUCCESS: {\r\n                return {\r\n                    ...state,\r\n                    values: {...state.values, captcha: null}\r\n                }\r\n            }\r\n            default: {\r\n                return state;\r\n            }\r\n        }\r\n    }\r\n})","import {authUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized : false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) =>{\r\n    let dispatchResult = dispatch(authUserData());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>{\r\n            dispatch(initializedSuccess());\r\n    })\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport formReducer from './form-reducer'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    MessagesPage: dialogsReducer,\r\n    UsersPage: usersReducer,\r\n    Auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {Box} from \"@material-ui/core\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nconst styles = theme => ({\n    root: {\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n        boxShadow: '0 -5px 30px rgba(0, 0, 0, 0.5)',\n        [theme.breakpoints.up('sm')]: {\n            left: '50%',\n            marginLeft: -300,\n            maxWidth: 600,\n        }\n    },\n    menu: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    item: {\n        color: \"#fff\",\n        textDecoration: \"none\",\n        transition: \"color .3s\",\n        '&:hover': {\n            color: 'tomato',\n        }\n    },\n    active: {\n        color: \"black\"\n    }\n});\n\nfunction AppBar(props) {\n    const {classes} = props;\n\n    return (\n        <div className={classes.root}>\n            <BottomNavigation\n                showLabels\n                className={classes.menu}\n            >\n                <BottomNavigationAction component={NavLink} to=\"/profile\" label={\"Profile\"} icon={<PersonIcon/>}/>\n                <BottomNavigationAction component={NavLink} to=\"/dialogs\" label={\"Dialogs\"} icon={<ChatIcon/>}/>\n                {/*\n                TODO: add article icon\n                <BottomNavigationAction component={NavLink} to=\"/news\" label={\"News\"} icon={<ArticleIcon/>}/>\n                */}\n                <BottomNavigationAction component={NavLink} to=\"/search\" label={\"Search\"} icon={<SearchIcon/>}/>\n                <BottomNavigationAction component={NavLink} to=\"/settings\" label={\"Settings\"} icon={<BuildIcon/>}/>\n            </BottomNavigation>\n        </div>\n        // <aside className={classes.root}>\n        //    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" className={classes.menu}>\n        //        <Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/profile\">Profile</NavLink></Box>\n        //        <Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/dialogs\">Messages</NavLink></Box>\n        //        <Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/news\">News</NavLink></Box>\n        //        <Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/users\">Find user</NavLink></Box>\n        //        <Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/settings\">Settings</NavLink></Box>\n        //    </Box>\n        // </aside>\n    );\n}\n\nexport default withStyles(styles)(AppBar);\n\n","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst PaginatorContainer = (props) => {\r\n    let currentPage = props.currentPage;\r\n    let itemsPaginatorCount = props.itemsPaginatorCount;\r\n    let leftEdge = Math.floor(currentPage / itemsPaginatorCount) * itemsPaginatorCount + 1;\r\n    let rightEdge = Math.ceil(currentPage / itemsPaginatorCount) * itemsPaginatorCount;\r\n\r\n    let [paginator, setPaginator] = useState({\r\n        currentPage: props.currentPage,\r\n        pagesCount: Math.ceil(props.totalUsersCount / props.pageSize),\r\n        itemsPaginatorCount: itemsPaginatorCount,\r\n        leftEdge: leftEdge,\r\n        rightEdge: rightEdge,\r\n        Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n    });\r\n\r\n    useEffect(()=>{\r\n        setPaginator((prevState)=>({\r\n            ...prevState,\r\n            pagesCount: Math.ceil(props.totalUsersCount / props.pageSize)\r\n        }))\r\n    }, [props.totalUsersCount, props.pageSize])\r\n\r\n    const movePages = (nbr) => {\r\n        let leftEdge = (paginator.leftEdge + nbr < 1)\r\n            ? 1 : paginator.leftEdge + nbr;\r\n        let rightEdge = (leftEdge + paginator.itemsPaginatorCount > paginator.pagesCount)\r\n            ? paginator.pagesCount : leftEdge + paginator.itemsPaginatorCount;\r\n\r\n        if(leftEdge > rightEdge)\r\n            rightEdge = leftEdge;\r\n        setPaginator((prevState) => ({\r\n                ...prevState,\r\n                leftEdge: leftEdge,\r\n                rightEdge: rightEdge,\r\n                Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n            })\r\n        )\r\n    }\r\n\r\n    return <Paginator {...props} pages={paginator.Pages} movePages={movePages} pagesCount={paginator.pagesCount}/>;\r\n}\r\n\r\nconst Paginator = ({currentPage, onPageChanged, pages, pagesCount, movePages, itemsPaginatorCount}) => {\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            {((!pages.some(x => x < 11))) &&\r\n            <button onClick={() => movePages(-itemsPaginatorCount)}>Prev</button>}\r\n            {pages.map(p => <div key={p} onClick={() => {\r\n                onPageChanged(p)\r\n            }} className={styles.pagination__item + ' ' + (currentPage === p && styles.pagination__current)}>{p}</div>)}\r\n            {!pages.some(x=> x > pagesCount - 10) && <button onClick={() => movePages(itemsPaginatorCount)}>Next</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginatorContainer;","import React from \"react\";\r\nimport defaultUserPhoto from \"../assets/freepik-avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DefaultUserAvatar from \"../Common/DefaultUserAvatar/DefaultUserAvatar\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        width: 100,\r\n        height: 100\r\n    }\r\n});\r\n\r\nconst User = ({\r\n                  id: userId,\r\n                  photos,\r\n                  name,\r\n                  followed,\r\n                  followingInProgress,\r\n                  unfollow,\r\n                  follow,\r\n                  status,\r\n                  classes\r\n              }) => {\r\n    return (\r\n        <div key={userId}>\r\n      <span>\r\n        <Link>\r\n          <NavLink to={`/profile/${userId}`}>\r\n            {\r\n                photos.small ?\r\n                    <img\r\n                        className={classes.avatar}\r\n                        src={photos.small != null ? photos.small : defaultUserPhoto}\r\n                        alt={`avatar of ${name}`}\r\n                    />\r\n                    :\r\n                    <DefaultUserAvatar className={classes.avatar}/>\r\n            }\r\n          </ NavLink>\r\n        </ Link>\r\n    <div>\r\n        {followed ? (\r\n            <button\r\n                disabled={followingInProgress.some((id) => userId === id)}\r\n                onClick={() => {\r\n                    unfollow(userId);\r\n                }}\r\n            >\r\n                Unfollow\r\n            </button>\r\n        ) : (\r\n            <button\r\n                disabled={followingInProgress.some((id) => userId === id)}\r\n                onClick={() => {\r\n                    follow(userId);\r\n                }}\r\n            >\r\n                Follow\r\n            </button>\r\n        )}\r\n    </div>\r\n</span>\r\n    <span>\r\n<span>\r\n<div>{name}</div>\r\n<div>{status}</div>\r\n</span>\r\n</span>\r\n</div>\r\n);\r\n};\r\n\r\nexport default withStyles(styles)(User);\r\n","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from \"./User\";\r\n\r\nconst Search = ({\r\n                   currentPage, pageSize, totalUsersCount,\r\n                   onPageChanged, followingInProgress, follow, unfollow,\r\n                   users\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                itemsPaginatorCount={10}\r\n            />\r\n            {\r\n                users.map(x =>\r\n                    <User\r\n                        {...x}\r\n                        followingInProgress={followingInProgress}\r\n                        follow={follow}\r\n                        unfollow={unfollow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.UsersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(\r\n    getUsersSelector,\r\n    (users) => {\r\n        return users.filter((u) => true);\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.UsersPage.followingInProgress;\r\n}","export const getIsAuth = (state) => {\r\n    return state.Auth.isAuth;\r\n}","import {connect} from \"react-redux\";\r\nimport {follow, requestUsers, toggleFollowingInProgress, toggleIsFetching, unfollow,} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Search from \"./Search\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\nimport {getIsAuth} from \"../../redux/auth-selector\";\r\n\r\nclass SearchContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Search\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                /></>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        toggleIsFetching, toggleFollowingInProgress,\r\n        requestUsers\r\n    }\r\n)(SearchContainer);","import React from 'react';\nimport Logo from '@material-ui/icons/Polymer'\nimport {NavLink} from \"react-router-dom\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => {\n    return {\n        root: {\n            background: theme.palette.primary.main,\n            marginBottom: 30,\n            display: 'flex',\n            padding: 20,\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        logo: {\n            color: '#fff',\n            width: '1.6em',\n            height: '1.6em'\n        },\n        loginName: {\n            color: 'white',\n            marginRight: 10,\n            textDecoration: 'none',\n            transition: '.3s',\n            '&:hover': {\n                color: '#c9f0ff'\n            }\n        },\n        loginLink: {\n            textDecoration: 'none',\n            marginLeft: 10\n        }\n    }\n};\n\nfunction Header(props) {\n    const {classes} = props;\n    return (\n        <header className={classes.root}>\n            <Logo color='secondary' className={classes.logo}/>\n            {/*<img className={classes.logo} src={Logo} alt=\"Logo\"/>*/}\n            <div className={classes.login}>\n                {props.isAuth ?\n                    <div><NavLink to={'/profile'} className={classes.loginName}>{props.login}</NavLink> <Button\n                        variant=\"contained\" color=\"secondary\" onClick={props.logout}>Log out</Button></div>\n                    : <NavLink className={classes.loginLink} to={'/login'}>\n                        <Button variant=\"contained\" color=\"secondary\">Login</Button>\n                    </NavLink>\n                }\n            </div>\n        </header>\n    );\n}\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (<Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    login: state.Auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React, {useState} from 'react';\nimport {reduxForm} from \"redux-form\";\nimport {Checkbox, createSimpleField, Input} from \"../Common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardContent} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    formSummaryError: {\n        border: '2px solid red',\n        padding: 5,\n        color: 'tomato',\n        marginTop: 50\n    },\n    registrationButton: {\n        marginLeft: 10\n    },\n    registrationForm: {\n        marginTop: 20\n    }\n});\n\nconst LoginForm = ({handleSubmit, error, captchaUrl, classes}) => {\n\n    const [hintRegister, setHintRegister] = useState(false);\n\n    return (\n        <div>\n            <form action=\"/\" method=\"GET\" onSubmit={handleSubmit}>\n                {createSimpleField('Email', 'login', required, Input)}\n                {createSimpleField('Password', 'password', required, Input, 'password')}\n                {createSimpleField('', 'RememberMe', null, Checkbox, 'checkbox', 'rememberMe')}\n\n                {captchaUrl && <>\n                    <img src={captchaUrl} alt=\"resolve this captcha\"/>\n                    {createSimpleField('captcha', 'captcha', required, Input)}\n                </>}\n                <div>\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Login</Button>\n                    <Button color=\"primary\" variant=\"outlined\" className={classes.registrationButton} onClick={()=>{setHintRegister(!hintRegister)}}>Registration</Button>\n                </div>\n                {hintRegister && <Card variant={'outlined'} className={classes.registrationForm}><CardContent>\n                    <p>Sorry, registration now is unsupported</p>\n                    <h3>But you can use demo profile below.</h3>\n                    <p><span className={classes.hint}>Login:</span> yokataj953@yosemail.com</p>\n                    <p><span className={classes.hint}>Passw:</span> gghm1f</p>\n                </CardContent>\n                </Card>}\n                {error && <div className={classes.formSummaryError}>\n                    {error}\n                </div>\n                }\n            </form>\n        </div>\n    );\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(withStyles(styles)(LoginForm));\n\nconst Login = (props) => {\n\n    const onSubmit = (formData) => {\n        const {login, password, rememberMe, captcha} = formData;\n        props.login(login, password, rememberMe, captcha);\n    }\n\n    if (props.isAuth)\n        return <Redirect to={\"/profile\"}/>\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.Auth.isAuth,\n    captchaUrl: state.Auth.captchaUrl\n})\n\nexport default connect(mapStateToProps, {\n    login\n})(Login);\n","import React from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>;\r\n    }\r\n}\r\n\r\nexport default WithSuspense;","import React from 'react';\nimport AppBar from './components/AppBar/AppBar.jsx';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport SearchContainer from \"./components/Users/SearchContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport WithSuspense from \"./hoc/withSuspense\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {withStyles} from \"@material-ui/core\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nconst styles = theme => ({\n    root: {\n        maxWidth: 600,\n        margin: '0 auto',\n        paddingBottom: 100,\n        background: '#fff',\n        minHeight: '100vh'\n    },\n    main: {\n        padding: \"0 15px\"\n    }\n});\n\nclass App extends React.Component {\n\n    catchAllUnhandledError(reason) {\n        console.log(reason);\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledError);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledError);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n\n        const {classes} = this.props;\n        return (\n                <div className={classes.root}>\n                    <HeaderContainer/>\n                    <div className={classes.main}>\n                        <Switch>\n                            <Route path='/profile/:userId?'\n                                   render={WithSuspense(ProfileContainer)}\n                            />\n\n                            <Route exact path='/'\n                                   render={WithSuspense(ProfileContainer)}\n                            />\n\n                            <Route exact path='/dialogs'\n                                   render={WithSuspense(DialogsContainer)}\n                            />\n\n                            <Route exact path='/news'\n                                   render={()=>{\n                                       return <div>The page is being created</div>;\n                                   }}\n                            />\n\n                            <Route exact path='/search'\n                                   render={WithSuspense(SearchContainer)}\n                            />\n\n\n                            <Route exact path='/settings'\n                                   render={()=>{\n                                       return <div>The page is being created</div>;\n                                   }}\n                            />\n\n                            <Route exact path='/login'\n                                   render={WithSuspense(Login)}\n                            />\n\n                            <Route path='*'\n                                   render={() => {\n                                       return <div>404 not found</div>;\n                                   }}/>\n                        </Switch>\n                    </div>\n                    <AppBar/>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    withStyles(styles),\n    connect(mapStateToProps, {initializeApp})\n)\n(App);\n\nexport default AppContainer;\n","import {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport {createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {withStyles} from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst theme = createMuiTheme({\r\n        overrides: {\r\n            MuiCssBaseline: {\r\n                '@global': {\r\n                    body: {\r\n                        minHeight: '100%'\r\n                    },\r\n                    '#root': {\r\n                        minHeight: '100%'\r\n                    }\r\n                }\r\n            },\r\n            MuiBottomNavigationAction: {\r\n                root: {\r\n                    color: '#effaff'\r\n                },\r\n                MuiSvgIcon: {\r\n                    root: {\r\n                        fill: '#effaff'\r\n                    }\r\n                },\r\n            },\r\n\r\n            MuiButton: {\r\n                color: 'white',\r\n                text: {\r\n                    color: 'white'\r\n                }\r\n            }\r\n        },\r\n        palette: {\r\n            primary: {\r\n                main: '#05668D',\r\n            },\r\n            secondary: {\r\n                main: '#0A1128'\r\n            },\r\n            background: {\r\n                default: '#d6d6d6'\r\n            },\r\n        }\r\n    })\r\n;\r\n\r\nconst AppInit = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <App/>\r\n                </MuiThemeProvider>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default AppInit;","import * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport AppInit from \"./AppInit\";\n\nReactDOM.render(\n    <AppInit/>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport {Field} from \"redux-form\";\r\nimport InputUI from '@material-ui/core/Input'\r\nimport CheckboxUI from \"@material-ui/core/Checkbox\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst styles = theme => ({\r\n        formControl: {\r\n            marginBottom: 15\r\n        },\r\n        error: {\r\n            '& textarea': {\r\n                border: \"2px solid red\"\r\n            },\r\n            '& span': {\r\n                color: \"red\"\r\n            }\r\n        },\r\n        formSummaryError: {\r\n            border: \"2px solid red\",\r\n            padding: \"5px\",\r\n            color: \"tomato\"\r\n        }\r\n    })\r\n;\r\n\r\nexport const FormControl = withStyles(styles)(\r\n    (\r\n        {\r\n            input,\r\n            meta: {touched, error},\r\n            children,\r\n            classes,\r\n            ...props\r\n        }\r\n    ) => {\r\n        const hasError = touched && error;\r\n        return (\r\n            <div className={classes.formControl + \" \" + (hasError && classes.error)}>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        )\r\n    }\r\n);\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><InputUI {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Checkbox = (props) => {\r\n    const {input, meta, child, text, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <FormControlLabel\r\n            control={<CheckboxUI {...input} {...restProps} />}\r\n            label={text}\r\n        >\r\n        </FormControlLabel>\r\n    </FormControl>\r\n}\r\n\r\n\r\nexport const createSimpleField = (placeHolder, name, validators, component, type, text) => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeHolder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            type={type}\r\n            text={text}\r\n        />\r\n        {type !== 'checkbox' ? text : ''}\r\n    </div>\r\n);","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles['lds-ripple']}>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}