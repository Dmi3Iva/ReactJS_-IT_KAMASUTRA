{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirectComponent","Component","RedirectComponent","this","props","isAuth","authUserData","to","React","connect","state","Auth","module","exports","DialogItem","id","name","Message","className","styles","messages__item","messages__user","messages__avatar","avatar","messages__user_name","messages__text","text","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","type","DialogFormContainer","formData","sendMessage","newMessageText","Dialogs","dialogs__header","dialogs","dialogs__list","DialogItems","dialogs__messages","messages","MessageItems","compose","MessagesPage","ContactsData","map","x","key","MessagesData","newMessage"],"mappings":"oNAKaA,EAA4B,SAACC,GAAe,IAC/CC,EAD8C,uKAG5C,OAA0B,IAAtBC,KAAKC,MAAMC,SACXC,eACyB,IAAtBH,KAAKC,MAAMC,QACH,kBAAC,IAAD,CAAUE,GAAI,WAEtB,kBAACN,EAAcE,KAAKC,WARiB,GACpBI,IAAMP,WAWtC,OAAOQ,mBAAQ,SAACC,GAER,MAAO,CACHL,OAAQK,EAAMC,KAAKN,UAG3B,CACIC,kBAPDG,CASLP,K,0CCzBNU,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,kBAAoB,mCAAmC,SAAW,4B,oECWvJC,EARI,SAAAV,GACf,OACI,4BACI,kBAAC,IAAD,CAASG,GAAI,YAAcH,EAAMW,IAAKX,EAAMY,Q,kBCQzCC,EAZC,SAAAb,GACZ,OACI,yBAAKc,UAAWC,IAAOC,gBACnB,yBAAKF,UAAWC,IAAOE,gBACnB,yBAAKH,UAAWC,IAAOG,kBAAmBlB,EAAMmB,QAChD,yBAAKL,UAAWC,IAAOK,qBAAsBpB,EAAMY,OAEvD,yBAAKE,UAAWC,IAAOM,gBAAiBrB,EAAMsB,Q,uFCoCpDC,EAAkBC,YAAU,CAC9BC,KAAM,cADcD,EAVN,SAACxB,GAEf,OACI,0BAAM0B,SAAU1B,EAAM2B,aAAcb,UAAU,wBAC1C,kBAACc,EAAA,EAAD,CAAOhB,KAAM,iBAAkBiB,UAAWC,IAAUC,SAAUC,MAC9D,4BAAQC,KAAM,UAAd,YASNC,EAAsB,SAAClC,GAKzB,OACI,kBAACuB,EAAD,CAAiBG,SALL,SAACS,GACbnC,EAAMoC,YAAYD,EAASE,oBAQpBC,EArDC,SAACtC,GAMb,OAAqB,IAAjBA,EAAMC,OACC,kBAAC,IAAD,CAAUE,GAAI,WAIrB,6BACI,wBAAIW,UAAWC,IAAOwB,iBAAtB,WACA,yBAAKzB,UAAWC,IAAOyB,SACnB,wBAAI1B,UAAWC,IAAO0B,eACjBzC,EAAM0C,aAEX,yBAAK5B,UAAS,UAAKC,IAAO4B,kBAAZ,YAAiC5B,IAAO6B,WACjD5C,EAAM6C,aACP,0BAAMnB,SAAU1B,EAAM2B,cAElB,kBAAC,EAAD,CAAqBS,YAnBvB,SAACd,GACftB,EAAMoC,YAAYd,W,QCQXwB,4BACXzC,mBAVkB,SAACC,GACnB,MAAO,CACHoC,YAAapC,EAAMyC,aAAaC,aAAaC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtC,KAAMsC,EAAEtC,KAAMuC,IAAKD,EAAEvC,QACvFkC,aAAcvC,EAAMyC,aAAaK,aAAaH,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAS/B,OAAQ+B,EAAE/B,OAAQP,KAAMsC,EAAEtC,KAAMU,KAAM4B,EAAE5B,KACxC6B,IAAKD,EAAEvC,QACvE0C,WAAY/C,EAAMyC,aAAaM,cAKV,CAACjB,kBAC1BxC,IAFWkD,CAGbR","file":"static/js/4.5de2eba6.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUserData} from \"../redux/auth-reducer\";\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) {\r\n                authUserData();\r\n                if(this.props.isAuth === false)\r\n                    return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect((state) =>\r\n        {\r\n            return {\r\n                isAuth: state.Auth.isAuth\r\n            }\r\n        },\r\n        {\r\n            authUserData\r\n        }\r\n    )(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__18BuJ\",\"dialogs__list\":\"Dialogs_dialogs__list__3hpyN\",\"dialogs__messages\":\"Dialogs_dialogs__messages__3tRMg\",\"messages\":\"Dialogs_messages__3BBgn\"};","import React from 'react';\n//import styles from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = props => {\n    return (\n        <li>\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n        </li>\n    );\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport styles from './Message.module.css';\n\nconst Message = props => {\n    return (\n        <div className={styles.messages__item}>\n            <div className={styles.messages__user}>\n                <div className={styles.messages__avatar}>{props.avatar}</div>\n                <div className={styles.messages__user_name}>{props.name}</div>\n            </div>\n            <div className={styles.messages__text}>{props.text}</div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n\n    let sendMessage = (text) => {\n        props.sendMessage(text);\n    }\n\n    if (props.isAuth === false) {\n        return <Redirect to={\"/login\"}/>;\n    }\n\n    return (\n        <div>\n            <h2 className={styles.dialogs__header}>Dialogs</h2>\n            <div className={styles.dialogs}>\n                <ul className={styles.dialogs__list}>\n                    {props.DialogItems}\n                </ul>\n                <div className={`${styles.dialogs__messages} ${styles.messages}`}>\n                    {props.MessageItems}\n                    <form onSubmit={props.handleSubmit}>\n\n                        <DialogFormContainer sendMessage={sendMessage}/>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst DialogForm =(props)=>\n{\n    return (\n        <form onSubmit={props.handleSubmit} className=\"dialogs__new_message\">\n            <Field name={\"newMessageText\"} component={Textarea} validate={required} />\n            <button type={\"submit\"} >Send</button>\n        </form>\n    );\n}\n\nconst DialogReduxForm = reduxForm({\n    form: 'dialogForm'\n})(DialogForm)\n\nconst DialogFormContainer = (props) => {\n    const onSubmit =(formData)=>{\n        props.sendMessage(formData.newMessageText);\n    }\n\n    return (\n        <DialogReduxForm onSubmit={onSubmit} />\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem.jsx'\nimport Message from './Message/Message.jsx'\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirect\";\nimport Dialogs from \"./Dialogs\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        DialogItems: state.MessagesPage.ContactsData.map(x => <DialogItem name={x.name} key={x.id}/>),\n        MessageItems: state.MessagesPage.MessagesData.map(x => <Message avatar={x.avatar} name={x.name} text={x.text}\n                                                                        key={x.id}/>),\n        newMessage: state.MessagesPage.newMessage\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {sendMessage}),\n    withAuthRedirectComponent\n)(Dialogs);"],"sourceRoot":""}