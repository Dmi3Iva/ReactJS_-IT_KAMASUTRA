{"version":3,"sources":["components/Common/FormsControls/FormsControls.module.css","redux/profile-reducer.js","components/assets/freepik-avatar.jpg","redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","components/assets/loading.svg","components/Header/logo.svg","components/Login/login.module.css","components/Sidebar/Sidebar.module.css","components/Common/FormsControls/FormsControls.js","redux/auth-reducer.js","serviceWorker.js","components/Sidebar/Sidebar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","redux/auth-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/Common/Preloader/Preloader.jsx","utils/validators/validators.js","App.module.css","components/Common/Paginator/Paginator.module.css","components/Header/Header.module.css"],"names":["module","exports","ADD_POST","PROFILE_PREFIX","SET_USER_PROFILE","SET_STATUS","REMOVE_POST","initialState","PostsData","id","message","likesCount","profile","newPostText","status","addPost","type","setUserStatus","updateProfileSuccess","saveProfilePhoto","file","dispatch","a","profileAPI","updateProfilePhoto","response","data","resultCode","photos","getStatus","userId","updateStatus","getUserProfile","updateProfile","usersAPI","messages","length","stopSubmit","_error","Promise","reject","profileReducer","state","action","lastId","undefined","postText","filter","x","postId","MessagesData","avatar","name","text","ContactsData","sendMessage","newMessage","dialogsReducer","instance","axios","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","then","followUser","post","unfollowUser","delete","put","authAPI","authMe","login","email","password","rememberMe","captcha","logout","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createSimpleField","placeHolder","validators","component","placeholder","validate","SET_USER_DATA","AUTH_PREFIX","isAuth","captchaUrl","authUserData","setAuthUserData","pass","url","getCaptchaUrlSuccess","authReducer","Boolean","window","location","hostname","match","Sidebar","sidebar","sidebar__menu","sidebar__item","activeClassName","active","to","updateObjectInArray","items","itemId","objPropName","newObjProps","map","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","Paginator","onPageChanged","pages","pagesCount","movePages","itemsPaginatorCount","pagination","some","onClick","p","key","pagination__item","pagination__current","PaginatorContainer","leftEdge","Math","floor","rightEdge","ceil","useState","Pages","Array","element","index","paginator","setPaginator","useEffect","prevState","nbr","User","unfollow","follow","userPhoto","src","small","defaultUserPhoto","alt","disabled","Users","createSelector","UsersPage","u","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","Auth","UsersContainer","requestUsers","this","Preloader","React","Component","connect","bind","totalCount","Header","header","header__logo","logo","login__block","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","method","onSubmit","required","style","formSummaryError","initialized","reducers","combineReducers","ProfilePage","MessagesPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","reason","console","log","initializeApp","addEventListener","catchAllUnhandledError","removeEventListener","wrapper","content","path","render","exact","Login","AppContainer","withRouter","dispatchResult","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","loadingSVG","value","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.08683ae9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__yXrOt\",\"error\":\"FormsControls_error__be64g\",\"formSummaryError\":\"FormsControls_formSummaryError__1-FTL\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form/lib/immutable\";\r\n\r\nconst PROFILE_PREFIX = 'PROFILE_REDUCER/';\r\nconst ADD_POST = PROFILE_PREFIX + 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = PROFILE_PREFIX + 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = PROFILE_PREFIX + 'SET_USER_PROFILE';\r\nconst SET_STATUS = PROFILE_PREFIX + 'SET_STATUS';\r\nconst REMOVE_POST = PROFILE_PREFIX + 'REMOVE_POST';\r\nconst SAVE_PROFILE_PHOTO = PROFILE_PREFIX + 'SAVE_PROFILE_PHOTO';\r\nconst UPDATE_PROFILE_SUCCESS = PROFILE_PREFIX + 'UPDATE_PROFILE_SUCCESS';\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: \"There's my first post!\", likesCount: 10},\r\n        {id: 2, message: \"Welcome to my page!\", likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    newPostText: '',\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let lastId = 1;\r\n            while (state.PostsData[lastId - 1] !== undefined)\r\n                ++lastId;\r\n\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData,\r\n                    {\r\n                        id: lastId,\r\n                        message: action.newPostText,\r\n                        likesCount: 0\r\n                    }\r\n                ],\r\n                newPostText: ''\r\n            };\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case REMOVE_POST: {\r\n            return {\r\n                ...state, PostsData: state.PostsData.filter(x => x.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PROFILE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...action.profile\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const removePost = (postId) => ({type: REMOVE_POST, postId});\r\nexport const updateNewPost = (postText) => ({type: UPDATE_NEW_POST_TEXT, postText: postText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_STATUS, status});\r\nexport const saveProfilePhotoSuccess = (photos) => ({type: SAVE_PROFILE_PHOTO, photos});\r\nexport const updateProfileSuccess = (profile) => ({type: UPDATE_PROFILE_SUCCESS, profile});\r\n\r\nexport const saveProfilePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.updateProfilePhoto(file);\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(saveProfilePhotoSuccess(response.data.data.photos));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const updateProfile = (profile) => async (dispatch) => {\r\n    let response = await usersAPI.updateProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updateProfileSuccess);\r\n    }\r\n    else\r\n    {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"unknown error\";\r\n        dispatch(stopSubmit(\"profile\", {_error: message}))\r\n        return Promise.reject(message);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","module.exports = __webpack_public_path__ + \"static/media/freepik-avatar.5b019637.jpg\";","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    MessagesData: [\r\n        {id: 1, avatar: \"ava\", name: \"Andrew\", text: \"How is your day?\"},\r\n        {id: 2, avatar: \"ava\", name: \"Me\", text: \"It's ok, thank you for asking\"},\r\n        {id: 3, avatar: \"ava\", name: \"Andrew\", text: \"You're welcome!\"}\r\n    ],\r\n    ContactsData: [\r\n        {id: 1, name: \"Andrew\"},\r\n        {id: 2, name: \"Oleg\"},\r\n        {id: 3, name: \"Sasha\"},\r\n        {id: 4, name: \"Sveta\"},\r\n        {id: 5, name: \"Olga\"},\r\n        {id: 6, name: \"Kristy\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ADD_MESSAGE:\r\n            let lastId = 1;\r\n            while( state.MessagesData[lastId] !== undefined)\r\n                ++lastId;\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {\r\n                    id: lastId,\r\n                    avatar: \"ava\",\r\n                    name: \"The GOD\",\r\n                    text: action.newMessage\r\n                }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessage) => ({ type: ADD_MESSAGE, newMessage });\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://social-network.samuraijs.com/api/1.0/';\r\nconst API_KEY = '53d3dc64-a25c-445e-81a3-2b2dcf8f14a9';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': API_KEY\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    followUser: (userId) => {\r\n        return instance.post('follow/' + userId, null)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollowUser: (userId) => {\r\n        return instance.delete('follow/' + userId)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateProfile: (profile) => {\r\n        return instance.put('profile', profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () => {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    login: (email, password, rememberMe = false, captcha = null) => {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha});\r\n    },\r\n    logout: () => {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`).then(\r\n            response => {\r\n                return response.data\r\n            }\r\n        );\r\n    },\r\n    getStatus: (userId) => {\r\n        return instance.get('profile/status/' + userId)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance.put('profile/status/', {status})\r\n            .then(response => response.data);\r\n    },\r\n    updateProfilePhoto: (photoFile) => {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl : () => {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3GUvv\"};","module.exports = __webpack_public_path__ + \"static/media/loading.4ba43602.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"login_formSummaryError__r67RS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__gRxXe\",\"sidebar__menu\":\"Sidebar_sidebar__menu__tltDb\",\"sidebar__item\":\"Sidebar_sidebar__item__lG_a9\",\"active\":\"Sidebar_active__3FjMO\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError && styles.error)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createSimpleField = (placeHolder, name, validators, component, type = 'text', text) => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeHolder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            type={type}\r\n        />\r\n        {text}\r\n    </div>\r\n);\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst AUTH_PREFIX = 'AUTH_REDUCER/'\r\nconst SET_USER_DATA = AUTH_PREFIX + 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = AUTH_PREFIX + 'GET_CAPTCHA_URL_SUCCESS ';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: action.data.isAuth\r\n            }\r\n        }\r\n        case GET_CAPTCHA_URL_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.data.captchaUrl\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport const authUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n    else {\r\n        if(data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n}\r\n\r\nexport const login = (email, pass, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, pass, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUserData());\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = ()=> async(dispatch)=>{\r\n    const response = await securityAPI.getCaptchaUrl();\r\n\r\n    const captcha = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captcha));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth = false) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, login, email, isAuth}\r\n});\r\n\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl)=> ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    data: {captchaUrl}\r\n});\r\n\r\nexport default authReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './Sidebar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nfunction Sidebar() {\n\treturn (\n\t\t<aside className={styles.sidebar}>\n\t\t\t<ul className={styles.sidebar__menu}>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/profile\">Profile</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/dialogs\">Messages</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/news\">News</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/music\">Music</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/users\">Find user</NavLink></li>\n\t\t\t\t<li><NavLink className={styles.sidebar__item} activeClassName={styles.active} to=\"/settings\">Settings</NavLink></li>\n\t\t\t</ul>\n\t\t</aside>\n\t);\n}\n\nexport default Sidebar;\n\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(x => {\r\n        if (x[objPropName] === itemId) {\r\n            return {...x, ...newObjProps}\r\n        }\r\n        return x;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\n//TODO: add prefixs files for conts\r\nconst PREFIX ='USER-REDUCER/'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    let data = await apiMethod(id);\r\n\r\n    if (data.resultCode === 0)\r\n        dispatch(actionCreator(id));\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst PaginatorContainer = (props) => {\r\n    let currentPage = props.currentPage;\r\n    let itemsPaginatorCount = props.itemsPaginatorCount;\r\n    let leftEdge = Math.floor(currentPage / itemsPaginatorCount) * itemsPaginatorCount + 1;\r\n    let rightEdge = Math.ceil(currentPage / itemsPaginatorCount) * itemsPaginatorCount;\r\n\r\n    let [paginator, setPaginator] = useState({\r\n        currentPage: props.currentPage,\r\n        pagesCount: Math.ceil(props.totalUsersCount / props.pageSize),\r\n        itemsPaginatorCount: itemsPaginatorCount,\r\n        leftEdge: leftEdge,\r\n        rightEdge: rightEdge,\r\n        Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n    });\r\n\r\n    useEffect(()=>{\r\n        setPaginator((prevState)=>({\r\n            ...prevState,\r\n            pagesCount: Math.ceil(props.totalUsersCount / props.pageSize)\r\n        }))\r\n    }, [props.totalUsersCount, props.pageSize])\r\n\r\n    const movePages = (nbr) => {\r\n        let leftEdge = (paginator.leftEdge + nbr < 1)\r\n            ? 1 : paginator.leftEdge + nbr;\r\n        let rightEdge = (leftEdge + paginator.itemsPaginatorCount > paginator.pagesCount)\r\n            ? paginator.pagesCount : leftEdge + paginator.itemsPaginatorCount;\r\n\r\n        if(leftEdge > rightEdge)\r\n            rightEdge = leftEdge;\r\n        setPaginator((prevState) => ({\r\n                ...prevState,\r\n                leftEdge: leftEdge,\r\n                rightEdge: rightEdge,\r\n                Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n            })\r\n        )\r\n    }\r\n\r\n    return <Paginator {...props} pages={paginator.Pages} movePages={movePages} pagesCount={paginator.pagesCount}/>;\r\n}\r\n\r\nconst Paginator = ({currentPage, onPageChanged, pages, pagesCount, movePages, itemsPaginatorCount}) => {\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            {((!pages.some(x => x < 11))) &&\r\n            <button onClick={() => movePages(-itemsPaginatorCount)}>Prev</button>}\r\n            {pages.map(p => <div key={p} onClick={() => {\r\n                onPageChanged(p)\r\n            }} className={styles.pagination__item + ' ' + (currentPage === p && styles.pagination__current)}>{p}</div>)}\r\n            {!pages.some(x=> x > pagesCount - 10) && <button onClick={() => movePages(itemsPaginatorCount)}>Next</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginatorContainer;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport defaultUserPhoto from \"../assets/freepik-avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({\r\n                  id: userId,\r\n                  photos,\r\n                  name,\r\n                  followed,\r\n                  followingInProgress,\r\n                  unfollow,\r\n                  follow,\r\n                  status,\r\n              }) => {\r\n    return (\r\n        <div key={userId}>\r\n      <span>\r\n        <div>\r\n          <NavLink to={`/profile/${userId}`}>\r\n            <img\r\n                className={styles.userPhoto}\r\n                src={photos.small != null ? photos.small : defaultUserPhoto}\r\n                alt={`avatar of ${name}`}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {followed ? (\r\n              <button\r\n                  disabled={followingInProgress.some((id) => userId === id)}\r\n                  onClick={() => {\r\n                      unfollow(userId);\r\n                  }}\r\n              >\r\n                  Unfollow\r\n              </button>\r\n          ) : (\r\n              <button\r\n                  disabled={followingInProgress.some((id) => userId === id)}\r\n                  onClick={() => {\r\n                      follow(userId);\r\n                  }}\r\n              >\r\n                  Follow\r\n              </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n            <span>\r\n        <span>\r\n          <div>{name}</div>\r\n          <div>{status}</div>\r\n        </span>\r\n      </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from \"./User\";\r\n\r\nconst Users = ({\r\n                   currentPage, pageSize, totalUsersCount,\r\n                   onPageChanged, followingInProgress, follow, unfollow,\r\n                   users\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                itemsPaginatorCount={10}\r\n            />\r\n            {\r\n                users.map(x =>\r\n                    <User\r\n                        {...x}\r\n                        followingInProgress={followingInProgress}\r\n                        follow={follow}\r\n                        unfollow={unfollow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.UsersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(\r\n    getUsersSelector,\r\n    (users) => {\r\n        return users.filter((u) => true);\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.UsersPage.followingInProgress;\r\n}","export const getIsAuth = (state) => {\r\n    return state.Auth.isAuth;\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    toggleFollowingInProgress,\r\n    toggleIsFetching,\r\n    unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\nimport {getIsAuth} from \"../../redux/auth-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                /></>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        toggleIsFetching, toggleFollowingInProgress,\r\n        requestUsers\r\n    }\r\n)(UsersContainer);","import React from 'react';\nimport logo from './logo.svg';\nimport styles from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header(props){\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<img className={styles.header__logo} src={logo} alt=\"Logo\"/>\n\t\t\t<div className={styles.login__block}>\n\t\t\t\t{props.isAuth ?\n\t\t\t\t\t<div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n\t\t\t\t\t:<NavLink to={'/login'}>Login</NavLink>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (<Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    login: state.Auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createSimpleField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./login.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error,  captchaUrl}) => {\r\n    return (\r\n        <div>\r\n            <form action=\"/\" method=\"GET\" onSubmit={handleSubmit}>\r\n                {createSimpleField('Login', 'login', required, Input)}\r\n                {createSimpleField('password', 'password', required, Input, 'password')}\r\n                {createSimpleField('', 'rememberMe',  null, Input, 'checkbox', 'rememberMe')}\r\n\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                {captchaUrl && <>\r\n                    <img src={captchaUrl} alt=\"resolve this captcha\"/>\r\n                    {createSimpleField('captcha', 'captcha', required, Input)}\r\n                </>}\r\n                <div>\r\n                    <button>login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        const {login, password, rememberMe, captcha} = formData;\r\n        props.login(login, password, rememberMe, captcha);\r\n    }\r\n\r\n    if (props.isAuth)\r\n        return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    captchaUrl: state.Auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login);\r\n","import {authUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized : false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) =>{\r\n    let dispatchResult = dispatch(authUserData());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>{\r\n            dispatch(initializedSuccess());\r\n    })\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    MessagesPage: dialogsReducer,\r\n    UsersPage: usersReducer,\r\n    Auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>;\r\n    }\r\n}\r\n\r\nexport default WithSuspense;","import React from 'react';\nimport Sidebar from './components/Sidebar/Sidebar.jsx';\nimport styles from './App.module.css';\nimport {Switch, HashRouter, Route, withRouter} from 'react-router-dom';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport WithSuspense from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    catchAllUnhandledError(reason ){\n        console.log(reason);\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledError);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(this.catchAllUnhandledError);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n\n        return (\n            <div>\n                <div className={`${styles.App} ${styles.wrapper}`}>\n                    <HeaderContainer/>\n                    <Sidebar/>\n                    <div className={styles.content}>\n\n                        <Switch>\n                            <Route path='/profile/:userId?'\n                                   render={WithSuspense(ProfileContainer)}\n                            />\n\n                            <Route exact path='/'\n                                   render={WithSuspense(ProfileContainer)}\n                            />\n\n                            <Route exact path='/dialogs'\n                                   render={WithSuspense(DialogsContainer)}\n                            />\n\n                            <Route exact path='/users'\n                                   render={WithSuspense(UsersContainer)}\n                            />\n\n                            <Route exact path='/login'\n                                   render={WithSuspense(Login)}\n                            />\n\n                            <Route path='*'\n                                   render={() => {\n                                       return <div>404 not found</div>;\n                                   }}/>\n                        </Switch>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)\n(App);\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    );\n}\n\nexport default SamuraiJSApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport SamuraiJSApp from \"./App\";\n\n// setInterval(()=>{\n//     store.dispatch({type: 'FAKE'});\n// }, 1000)\n\nReactDOM.render(\n    <SamuraiJSApp/>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport loadingSVG from \"../../assets/loading.svg\";\r\n\r\nconst Preloader = (props)=>{\r\n    return (<img src={loadingSVG} alt=\"Please, wait for download...\"/>);\r\n}\r\n\r\nexport default Preloader;","export const required = (value)=>{\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max length us ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength30 = (value)=>{\r\n    if(value && value.length > 30) return \"max length is 30 symbols\";\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3Fubn\",\"App\":\"App_App__2Pnnn\",\"content\":\"App_content__38VNa\",\"content__wallpaper\":\"App_content__wallpaper__1iWTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__3WCVh\",\"pagination__item\":\"Paginator_pagination__item__qZRBs\",\"pagination__current\":\"Paginator_pagination__current__2XU1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-lMr\",\"header__logo\":\"Header_header__logo__X1oim\",\"login__block\":\"Header_login__block__1M05r\"};"],"sourceRoot":""}