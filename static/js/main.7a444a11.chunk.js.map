{"version":3,"sources":["utils/validators/validators.js","components/Common/Paginator/Paginator.module.css","components/Common/Preloader/Preloader.module.css","components/Common/FormsControls/FormsControls.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","components/assets/freepik-avatar.jpg","components/Users/users.module.css","components/Header/logo.svg","components/Login/login.module.css","api/api.js","components/Common/FormsControls/FormsControls.js","serviceWorker.js","utils/object-helpers.js","redux/users-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/AppBar/AppBar.jsx","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","redux/auth-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.jsx","App.js","AppInit.jsx","index.js","redux/auth-reducer.js","components/Common/Preloader/Preloader.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","module","exports","ADD_POST","PROFILE_PREFIX","SET_USER_PROFILE","SET_STATUS","REMOVE_POST","initialState","PostsData","id","message","likesCount","profile","newPostText","status","addPost","type","setUserStatus","updateProfileSuccess","saveProfilePhoto","file","dispatch","a","profileAPI","updateProfilePhoto","response","data","resultCode","photos","getStatus","userId","updateStatus","getUserProfile","updateProfile","usersAPI","messages","stopSubmit","_error","Promise","reject","profileReducer","state","action","lastId","undefined","postText","filter","x","postId","MessagesData","avatar","name","text","ContactsData","sendMessage","newMessage","dialogsReducer","instance","axios","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","then","followUser","post","unfollowUser","delete","put","authAPI","authMe","login","email","password","rememberMe","captcha","logout","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createSimpleField","placeHolder","validators","component","placeholder","validate","Boolean","window","location","hostname","match","updateObjectInArray","items","itemId","objPropName","newObjProps","map","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","initialized","reducers","combineReducers","ProfilePage","MessagesPage","UsersPage","Auth","authReducer","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withStyles","theme","root","position","bottom","backgroundColor","palette","primary","main","padding","width","boxShadow","breakpoints","up","left","marginLeft","maxWidth","menu","listStyle","margin","display","item","color","textDecoration","transition","active","classes","Box","justifyContent","alignItems","activeClassName","to","Paginator","onPageChanged","pages","pagesCount","movePages","itemsPaginatorCount","pagination","some","onClick","p","key","pagination__item","pagination__current","PaginatorContainer","leftEdge","Math","floor","rightEdge","ceil","useState","Pages","Array","element","index","paginator","setPaginator","useEffect","prevState","nbr","User","unfollow","follow","userPhoto","src","small","defaultUserPhoto","alt","disabled","Users","createSelector","u","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","isAuth","UsersContainer","requestUsers","this","Preloader","React","Component","connect","bind","totalCount","console","log","background","marginBottom","logo","maxHeight","loginName","marginRight","loginLink","Button","variant","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","captchaUrl","method","onSubmit","style","formSummaryError","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","reason","initializeApp","addEventListener","catchAllUnhandledError","removeEventListener","path","render","exact","Login","AppContainer","withRouter","paddingBottom","minHeight","dispatchResult","authUserData","all","createMuiTheme","overrides","MuiCssBaseline","body","secondary","default","AppInit","CssBaseline","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","SET_USER_DATA","AUTH_PREFIX","setAuthUserData","pass","url","getCaptchaUrlSuccess","wrapper"],"mappings":"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","file":"static/js/main.7a444a11.chunk.js","sourcesContent":["export const required = (value)=>{\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max length us ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength30 = (value)=>{\r\n    if(value && value.length > 30) return \"max length is 30 symbols\";\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__3WCVh\",\"pagination__item\":\"Paginator_pagination__item__qZRBs\",\"pagination__current\":\"Paginator_pagination__current__2XU1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__1QbnO\",\"lds-ripple\":\"Preloader_lds-ripple__33-Mw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__yXrOt\",\"error\":\"FormsControls_error__be64g\",\"formSummaryError\":\"FormsControls_formSummaryError__1-FTL\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form/lib/immutable\";\r\n\r\nconst PROFILE_PREFIX = 'PROFILE_REDUCER/';\r\nconst ADD_POST = PROFILE_PREFIX + 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = PROFILE_PREFIX + 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = PROFILE_PREFIX + 'SET_USER_PROFILE';\r\nconst SET_STATUS = PROFILE_PREFIX + 'SET_STATUS';\r\nconst REMOVE_POST = PROFILE_PREFIX + 'REMOVE_POST';\r\nconst SAVE_PROFILE_PHOTO = PROFILE_PREFIX + 'SAVE_PROFILE_PHOTO';\r\nconst UPDATE_PROFILE_SUCCESS = PROFILE_PREFIX + 'UPDATE_PROFILE_SUCCESS';\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: \"There's my first post!\", likesCount: 10},\r\n        {id: 2, message: \"Welcome to my page!\", likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    newPostText: '',\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let lastId = 1;\r\n            while (state.PostsData[lastId - 1] !== undefined)\r\n                ++lastId;\r\n\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData,\r\n                    {\r\n                        id: lastId,\r\n                        message: action.newPostText,\r\n                        likesCount: 0\r\n                    }\r\n                ],\r\n                newPostText: ''\r\n            };\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case REMOVE_POST: {\r\n            return {\r\n                ...state, PostsData: state.PostsData.filter(x => x.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PROFILE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...action.profile\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const removePost = (postId) => ({type: REMOVE_POST, postId});\r\nexport const updateNewPost = (postText) => ({type: UPDATE_NEW_POST_TEXT, postText: postText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_STATUS, status});\r\nexport const saveProfilePhotoSuccess = (photos) => ({type: SAVE_PROFILE_PHOTO, photos});\r\nexport const updateProfileSuccess = (profile) => ({type: UPDATE_PROFILE_SUCCESS, profile});\r\n\r\nexport const saveProfilePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.updateProfilePhoto(file);\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(saveProfilePhotoSuccess(response.data.data.photos));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const updateProfile = (profile) => async (dispatch) => {\r\n    let response = await usersAPI.updateProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updateProfileSuccess);\r\n    }\r\n    else\r\n    {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"unknown error\";\r\n        dispatch(stopSubmit(\"profile\", {_error: message}))\r\n        return Promise.reject(message);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    MessagesData: [\r\n        {id: 1, avatar: \"ava\", name: \"Andrew\", text: \"How is your day?\"},\r\n        {id: 2, avatar: \"ava\", name: \"Me\", text: \"It's ok, thank you for asking\"},\r\n        {id: 3, avatar: \"ava\", name: \"Andrew\", text: \"You're welcome!\"}\r\n    ],\r\n    ContactsData: [\r\n        {id: 1, name: \"Andrew\"},\r\n        {id: 2, name: \"Oleg\"},\r\n        {id: 3, name: \"Sasha\"},\r\n        {id: 4, name: \"Sveta\"},\r\n        {id: 5, name: \"Olga\"},\r\n        {id: 6, name: \"Kristy\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ADD_MESSAGE:\r\n            let lastId = 1;\r\n            while( state.MessagesData[lastId] !== undefined)\r\n                ++lastId;\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {\r\n                    id: lastId,\r\n                    avatar: \"ava\",\r\n                    name: \"The GOD\",\r\n                    text: action.newMessage\r\n                }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessage) => ({ type: ADD_MESSAGE, newMessage });\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/freepik-avatar.5b019637.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3GUvv\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"login_formSummaryError__r67RS\"};","import * as axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://social-network.samuraijs.com/api/1.0/';\r\nconst API_KEY = '53d3dc64-a25c-445e-81a3-2b2dcf8f14a9';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': API_KEY\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    followUser: (userId) => {\r\n        return instance.post('follow/' + userId, null)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollowUser: (userId) => {\r\n        return instance.delete('follow/' + userId)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateProfile: (profile) => {\r\n        return instance.put('profile', profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () => {\r\n        return instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    login: (email, password, rememberMe = false, captcha = null) => {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha});\r\n    },\r\n    logout: () => {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile: (userId) => {\r\n        return instance.get(`profile/${userId}`).then(\r\n            response => {\r\n                return response.data\r\n            }\r\n        );\r\n    },\r\n    getStatus: (userId) => {\r\n        return instance.get('profile/status/' + userId)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance.put('profile/status/', {status})\r\n            .then(response => response.data);\r\n    },\r\n    updateProfilePhoto: (photoFile) => {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl : () => {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError && styles.error)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createSimpleField = (placeHolder, name, validators, component, type = 'text', text) => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeHolder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            type={type}\r\n        />\r\n        {text}\r\n    </div>\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(x => {\r\n        if (x[objPropName] === itemId) {\r\n            return {...x, ...newObjProps}\r\n        }\r\n        return x;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\n//TODO: add prefixs files for conts\r\nconst PREFIX ='USER-REDUCER/'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false}),\r\n                followingInProgress: state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return (state);\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    let data = await apiMethod(id);\r\n\r\n    if (data.resultCode === 0)\r\n        dispatch(actionCreator(id));\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI);\r\n\r\n        await followUnfollowFlow(dispatch, id, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized : false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) =>{\r\n    let dispatchResult = dispatch(authUserData());\r\n\r\n    Promise.all([dispatchResult])\r\n        .then(()=>{\r\n            dispatch(initializedSuccess());\r\n    })\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    MessagesPage: dialogsReducer,\r\n    UsersPage: usersReducer,\r\n    Auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {Box} from \"@material-ui/core\";\n\nconst styles = theme => ({\n\troot: {\n\t\tposition: 'fixed',\n\t\tbottom: 0,\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\tpadding: 20,\n\t\twidth: '100%',\n\t\tboxShadow: '0 -5px 30px rgba(0, 0, 0, 0.5)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tleft: '50%',\n\t\t\tmarginLeft: -300,\n\t\t\tmaxWidth: 600,\n\t\t}\n\t},\n\tmenu: {\n\t\tlistStyle: 'none',\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tdisplay: 'flex'\n\t},\n\titem: {\n\t\tcolor: \"#fff\",\n\t\ttextDecoration: \"none\",\n\t\ttransition: \"color .3s\",\n\t\t'&:hover': {\n\t\t\tcolor: 'tomato',\n\t\t}\n\t},\n\tactive: {\n\t\tcolor: \"black\"\n\t}\n});\n\nfunction AppBar(props) {\n\tconst {classes} = props;\n\n\treturn (\n\t\t<aside className={classes.root}>\n\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" className={classes.menu}>\n\t\t\t\t<Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/profile\">Profile</NavLink></Box>\n\t\t\t\t<Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/dialogs\">Messages</NavLink></Box>\n\t\t\t\t<Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/news\">News</NavLink></Box>\n\t\t\t\t<Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/users\">Find user</NavLink></Box>\n\t\t\t\t<Box><NavLink className={classes.item} activeClassName={classes.active} to=\"/settings\">Settings</NavLink></Box>\n\t\t\t</Box>\n\t\t</aside>\n\t);\n}\n\nexport default withStyles(styles)(AppBar);\n\n","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst PaginatorContainer = (props) => {\r\n    let currentPage = props.currentPage;\r\n    let itemsPaginatorCount = props.itemsPaginatorCount;\r\n    let leftEdge = Math.floor(currentPage / itemsPaginatorCount) * itemsPaginatorCount + 1;\r\n    let rightEdge = Math.ceil(currentPage / itemsPaginatorCount) * itemsPaginatorCount;\r\n\r\n    let [paginator, setPaginator] = useState({\r\n        currentPage: props.currentPage,\r\n        pagesCount: Math.ceil(props.totalUsersCount / props.pageSize),\r\n        itemsPaginatorCount: itemsPaginatorCount,\r\n        leftEdge: leftEdge,\r\n        rightEdge: rightEdge,\r\n        Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n    });\r\n\r\n    useEffect(()=>{\r\n        setPaginator((prevState)=>({\r\n            ...prevState,\r\n            pagesCount: Math.ceil(props.totalUsersCount / props.pageSize)\r\n        }))\r\n    }, [props.totalUsersCount, props.pageSize])\r\n\r\n    const movePages = (nbr) => {\r\n        let leftEdge = (paginator.leftEdge + nbr < 1)\r\n            ? 1 : paginator.leftEdge + nbr;\r\n        let rightEdge = (leftEdge + paginator.itemsPaginatorCount > paginator.pagesCount)\r\n            ? paginator.pagesCount : leftEdge + paginator.itemsPaginatorCount;\r\n\r\n        if(leftEdge > rightEdge)\r\n            rightEdge = leftEdge;\r\n        setPaginator((prevState) => ({\r\n                ...prevState,\r\n                leftEdge: leftEdge,\r\n                rightEdge: rightEdge,\r\n                Pages: [...Array(rightEdge - leftEdge + 1)].map((element, index) => leftEdge + index)\r\n            })\r\n        )\r\n    }\r\n\r\n    return <Paginator {...props} pages={paginator.Pages} movePages={movePages} pagesCount={paginator.pagesCount}/>;\r\n}\r\n\r\nconst Paginator = ({currentPage, onPageChanged, pages, pagesCount, movePages, itemsPaginatorCount}) => {\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            {((!pages.some(x => x < 11))) &&\r\n            <button onClick={() => movePages(-itemsPaginatorCount)}>Prev</button>}\r\n            {pages.map(p => <div key={p} onClick={() => {\r\n                onPageChanged(p)\r\n            }} className={styles.pagination__item + ' ' + (currentPage === p && styles.pagination__current)}>{p}</div>)}\r\n            {!pages.some(x=> x > pagesCount - 10) && <button onClick={() => movePages(itemsPaginatorCount)}>Next</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginatorContainer;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport defaultUserPhoto from \"../assets/freepik-avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({\r\n                  id: userId,\r\n                  photos,\r\n                  name,\r\n                  followed,\r\n                  followingInProgress,\r\n                  unfollow,\r\n                  follow,\r\n                  status,\r\n              }) => {\r\n    return (\r\n        <div key={userId}>\r\n      <span>\r\n        <div>\r\n          <NavLink to={`/profile/${userId}`}>\r\n            <img\r\n                className={styles.userPhoto}\r\n                src={photos.small != null ? photos.small : defaultUserPhoto}\r\n                alt={`avatar of ${name}`}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {followed ? (\r\n              <button\r\n                  disabled={followingInProgress.some((id) => userId === id)}\r\n                  onClick={() => {\r\n                      unfollow(userId);\r\n                  }}\r\n              >\r\n                  Unfollow\r\n              </button>\r\n          ) : (\r\n              <button\r\n                  disabled={followingInProgress.some((id) => userId === id)}\r\n                  onClick={() => {\r\n                      follow(userId);\r\n                  }}\r\n              >\r\n                  Follow\r\n              </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n            <span>\r\n        <span>\r\n          <div>{name}</div>\r\n          <div>{status}</div>\r\n        </span>\r\n      </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from \"./User\";\r\n\r\nconst Users = ({\r\n                   currentPage, pageSize, totalUsersCount,\r\n                   onPageChanged, followingInProgress, follow, unfollow,\r\n                   users\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                itemsPaginatorCount={10}\r\n            />\r\n            {\r\n                users.map(x =>\r\n                    <User\r\n                        {...x}\r\n                        followingInProgress={followingInProgress}\r\n                        follow={follow}\r\n                        unfollow={unfollow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.UsersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(\r\n    getUsersSelector,\r\n    (users) => {\r\n        return users.filter((u) => true);\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.UsersPage.followingInProgress;\r\n}","export const getIsAuth = (state) => {\r\n    return state.Auth.isAuth;\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    toggleFollowingInProgress,\r\n    toggleIsFetching,\r\n    unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\nimport {getIsAuth} from \"../../redux/auth-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                /></>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        toggleIsFetching, toggleFollowingInProgress,\r\n        requestUsers\r\n    }\r\n)(UsersContainer);","import React from 'react';\nimport logo from './logo.svg';\nimport {NavLink} from \"react-router-dom\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => {\n\tconsole.log(theme);\n\treturn {\n\t\troot: {\n\t\t\tbackground: theme.palette.primary.main,\n\t\t\tmarginBottom: 30,\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: 15,\n\t\t\tjustifyContent: 'space-between',\n\t\t\talignItems: 'center'\n\t\t},\n\t\tlogo: {\n\t\t\tmaxWidth: \"100px\",\n\t\t\tmaxHeight: \"100px\"\n\t\t},\n\t\tloginName: {\n\t\t\tcolor: 'white',\n\t\t\tmarginRight: 10\n\t\t},\n\t\tloginLink: {\n\t\t\ttextDecoration: 'none',\n\t\t\tmarginLeft: 10\n\t\t}\n}};\n\nfunction Header(props){\n\tconst {classes} = props;\n\treturn (\n\t\t<header className={classes.root}>\n\t\t\t<img className={classes.logo} src={logo} alt=\"Logo\"/>\n\t\t\t<div className={classes.login}>\n\t\t\t\t{props.isAuth ?\n\t\t\t\t\t<div><span className={classes.loginName}>{props.login}</span> <Button variant=\"contained\" color=\"secondary\" onClick={props.logout}>Log out</Button></div>\n\t\t\t\t\t:<NavLink className={classes.loginLink} to={'/login'}>\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" >Login</Button>\n\t\t\t\t\t</NavLink>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (<Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    login: state.Auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createSimpleField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./login.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error,  captchaUrl}) => {\r\n    return (\r\n        <div>\r\n            <form action=\"/\" method=\"GET\" onSubmit={handleSubmit}>\r\n                {createSimpleField('Login', 'login', required, Input)}\r\n                {createSimpleField('password', 'password', required, Input, 'password')}\r\n                {createSimpleField('', 'rememberMe',  null, Input, 'checkbox', 'rememberMe')}\r\n\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                {captchaUrl && <>\r\n                    <img src={captchaUrl} alt=\"resolve this captcha\"/>\r\n                    {createSimpleField('captcha', 'captcha', required, Input)}\r\n                </>}\r\n                <div>\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Login</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        const {login, password, rememberMe, captcha} = formData;\r\n        props.login(login, password, rememberMe, captcha);\r\n    }\r\n\r\n    if (props.isAuth)\r\n        return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    captchaUrl: state.Auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login);\r\n","import React from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>;\r\n    }\r\n}\r\n\r\nexport default WithSuspense;","import React from 'react';\nimport AppBar from './components/AppBar/AppBar.jsx';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport WithSuspense from \"./hoc/withSuspense\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {withStyles} from \"@material-ui/core\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nconst styles = theme => ({\n    root: {\n        maxWidth: 600,\n        margin: '0 auto',\n        paddingBottom: 100,\n        background: '#fff',\n        minHeight: '100vh'\n    },\n    main: {\n        padding: \"0 15px\"\n    }\n});\n\nclass App extends React.Component {\n\n    catchAllUnhandledError(reason) {\n        console.log(reason);\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledError);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledError);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n\n        const {classes} = this.props;\n        return (\n                <div className={classes.root}>\n                    <HeaderContainer/>\n                    <div className={classes.main}>\n                        <Switch>\n                            <Route path='/profile/:userId?'\n                                   render={WithSuspense(ProfileContainer)}\n                            />\n\n                            <Route exact path='/'\n                                   render={WithSuspense(ProfileContainer)}\n                            />\n\n                            <Route exact path='/dialogs'\n                                   render={WithSuspense(DialogsContainer)}\n                            />\n\n                            <Route exact path='/news'\n                                   render={()=>{\n                                       return <div>The page is being created</div>;\n                                   }}\n                            />\n\n                            <Route exact path='/users'\n                                   render={WithSuspense(UsersContainer)}\n                            />\n\n\n                            <Route exact path='/settings'\n                                   render={()=>{\n                                       return <div>The page is being created</div>;\n                                   }}\n                            />\n\n                            <Route exact path='/login'\n                                   render={WithSuspense(Login)}\n                            />\n\n                            <Route path='*'\n                                   render={() => {\n                                       return <div>404 not found</div>;\n                                   }}/>\n                        </Switch>\n                    </div>\n                    <AppBar/>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    withStyles(styles),\n    connect(mapStateToProps, {initializeApp})\n)\n(App);\n\nexport default AppContainer;\n","import {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport {createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {withStyles} from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst theme = createMuiTheme({\r\n        overrides: {\r\n            MuiCssBaseline:{\r\n                '@global':{\r\n                    body:{\r\n                        minHeight: '100%'\r\n                    },\r\n                    '#root': {\r\n                        minHeight: '100%'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        palette: {\r\n            primary: {\r\n                main: '#05668D',\r\n            },\r\n            secondary: {\r\n                main: '#0A1128'\r\n            },\r\n            background: {\r\n                default: '#d6d6d6'\r\n            },\r\n        }\r\n    })\r\n;\r\n\r\nconst AppInit = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <App/>\r\n                </MuiThemeProvider>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default AppInit;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport AppInit from \"./AppInit\";\n\n// setInterval(()=>{\n//     store.dispatch({type: 'FAKE'});\n// }, 1000)\n\nReactDOM.render(\n    <AppInit/>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst AUTH_PREFIX = 'AUTH_REDUCER/'\r\nconst SET_USER_DATA = AUTH_PREFIX + 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = AUTH_PREFIX + 'GET_CAPTCHA_URL_SUCCESS ';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: action.data.isAuth\r\n            }\r\n        }\r\n        case GET_CAPTCHA_URL_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.data.captchaUrl\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport const authUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n    else {\r\n        if(data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n}\r\n\r\nexport const login = (email, pass, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, pass, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUserData());\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit('login', {\r\n            _error: message\r\n        }))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = ()=> async(dispatch)=>{\r\n    const response = await securityAPI.getCaptchaUrl();\r\n\r\n    const captcha = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captcha));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth = false) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, login, email, isAuth}\r\n});\r\n\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl)=> ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    data: {captchaUrl}\r\n});\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles['lds-ripple']}>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}